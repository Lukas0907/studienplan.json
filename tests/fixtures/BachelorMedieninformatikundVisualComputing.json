[
    {
        "module": [
            {
                "ects": "6,5",
                "lernergebnisse": "Denkweisen der Informatik bietet eine Einf\u00fchrung und einen \u00dcberblick \u00fcber die Informatik aus der Sicht ihrer Arbeits- und Denkweisen, vermittelt als eine\nArt angewandter Wissenschaftstheorie. Die LVA soll Interesse am weiteren Studium wecken, und die Studierenden in die Lage versetzen, die im weiteren Studium pr\u00e4sentierte\nInhalte besser einzuordnen. Die Studierenden sollen so in die Lage versetzt werden, die\nInformatik sowohl als Wissenschaft als auch als Praxis nachhaltiger zu verstehen, und\ndieses Wissen im Rahmen des Studiums produktiv umzusetzen.\nFachliche und methodische Kompetenzen: Studierende k\u00f6nnen \u2026\n\u2022   erkl\u00e4ren, was Informatik ist;\n\u2022   die Strukturen und Prozesse einer Universit\u00e4t darstellen;\n\u2022   Lernmethoden und Organisationsformen f\u00fcr das erfolgreiche Fortkommen im eigenen Studium anwenden;\n\u2022   ableiten, dass es bei Problemformulierung und Probleml\u00f6sung unterschiedliche und\nzum Teil in Konflikt zueinander stehende Sichtweisen, Herangehensweisen und Motive gibt;\n\u2022   die Str\u00f6mungen und Perspektiven des Denkens seit der vorwissenschaftlichen Zeit\nbis in die Gegenwart aufz\u00e4hlen, sowie die jeweils wesentlichen Grundbegriffe, Probleml\u00f6sungsans\u00e4tze und -methoden diskutieren;\n\u2022   die Notwendigkeit ethischen Handelns begr\u00fcnden, und k\u00f6nnen Methoden anwenden, mit denen ethische Fragestellungen systematisch behandelt werden;\n\u2022   die Verantwortung der Informatik bei der Gestaltung von Technologien im gesellschaftlichen Wandel diskutieren;\n\u2022   wesentliche Ereignisse und Ideen aus der Geschichte der Informationstechnologien\naufz\u00e4hlen und deren Relevanz kritisch reflektieren.\nKognitive und praktische Kompetenzen: Durch die theoretische und praktische Auseinandersetzung mit den Inhalten werden folgende kognitive Fertigkeiten vermittelt:\n\u2022   Auswahl und Einsatz von Strategien, Methoden und Werkzeugen zur Anwendung\nverschiedener Denk- und Probleml\u00f6sungsformen;\n\u2022   Formulierung von Kritik aus unterschiedlichen Perspektiven, rationale Auseinandersetzung im kritischen Dialog;\n\u2022   Einbettung aktueller Entwicklungen und Technologien in einen historischkritischen Kontext\n\u2022   selbst\u00e4ndige Wissenssuche und Wissenserwerb\n\u2022   Kritische Reflexion\nSoziale Kompetenzen und Selbstkompetenzen: Gruppenarbeiten in verschiedenen Zusammensetzungen und Gruppengr\u00f6\u00dfen erlauben Studierenden Erfahrungen zu sammeln, wie\nan Problemstellungen gemeinschaftlich herangegangen werden kann. In peer-review Aufgaben lernen Studierende, konstruktive Kritik an der Arbeit anderer zu \u00fcben, solche\nauch anzunehmen, und diese effektiv in ihre eigene Arbeit einfliessen zu lassen. Die unterschiedlichen Herangehensweisen an Probleme er\u00f6ffnen Studierenden dar\u00fcber hinaus\nHandlungsoptionen und Sichtweisen, die einen kreativen und innovativen Zugang zur\nGestaltung von Technologie erlauben. Dadurch wird auch zu ethischem Verhalten in\nInformatik und Gesellschaft angeregt.\nInhalt:\n\u2022   Vorwissenschaftliche Denkweisen\n\u2022   Denkweisen der naturwissenschaftlichen Revolution\n\u2022   Mathematisches Denken, insbesondere Rekursion, Abstraktion, Induktion und Deduktion\n\u2022   Computational Thinking inklusive der Fragen der Berechenbarkeit\n\u2022   Design Thinking, mit einem Schwerpunkt des Mottos der TU, \"Technik f\u00fcr Menschen\"\n\u2022   Kreativit\u00e4t und Innovation\n\u2022   Kritisches Denken, mit besonderer Betonung von Bias und algorithmic Bias\n\u2022   Verantwortung und Ethik, Verhaltensregeln, code of conducts, Freiheit der Forschung\n\u2022   Organisation und Struktur der TU Wien sowie der Fakult\u00e4t f\u00fcr Informatik\n\u2022   Bachelor- und Masterstudien der Informatik\n\u2022   Forschungsgebiete der Informatik (der Fakult\u00e4t und allgemein)\n\u2022   Strategien f\u00fcr einen erfolgreichen Studienabschluss (Lernen und Lernstrategien,\nsoziales Lernen, Stressbew\u00e4ltigung, Umgang mit Krisen)\nIn die Behandlung dieser Themen werden folgende Inhalte \u00fcbergreifend behandelt:\n\u2022   Geschichte der Informatik\n\u2022   Informatik und Gesellschaft\n\u2022   Lernen und Forschen an der TU Wien\n\u2022   Informatik als Wissenschaft\n\u2022   Diversit\u00e4t und Genderkompetenz\nErwartete Vorkenntnisse: Keine.\nVerpflichtende Voraussetzungen: Keine.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Inhalte werden in Vortr\u00e4gen von unterschiedlichen Vortragenden vorgestellt und teilweise\nvon Studierenden selbst erarbeitet. In selbstorganisierter Arbeit bearbeiten die Studierenden in einem eigenen Online-System \u00dcbungsaufgaben und begutachten im double\nblind peer reviewing-Verfahren die Arbeit von Mitstudierenden. Zur Bewertung werden nicht nur die Leistungen in den \u00dcbungsaufgaben, sondern auch die Qualit\u00e4t des\nReviewing herangezogen. Die Beurteilung des Orientierungsteils erfolgt auf Basis eines\nOnline-Tests.",
                "lvas": [
                    {
                        "ects": "5,5",
                        "lva_typ": "VU",
                        "name": "Denkweisen der Informatik",
                        "not_steop_constrained": true,
                        "semester": "1. Semester (WS)",
                        "sst": "4,0"
                    },
                    {
                        "ects": "1,0",
                        "lva_typ": "VU",
                        "name": "Orientierung Informatik und Wirtschaftsinformatik",
                        "not_steop_constrained": true,
                        "semester": "1. Semester (WS)",
                        "sst": "1,0"
                    }
                ],
                "name": "Denkweisen der Informatik",
                "wahl": false
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen:\n\u2022   Studierende verstehen die Notwendigkeit der systematischen Ber\u00fccksichtigung der\nInteressen von Nutzerinnen und Nutzern wie auch von anderen Interessensgruppen\nin der Gestaltung technischer Systeme.\n\u2022   Studierende k\u00f6nnen methodische Werkzeuge benennen und anwenden, die diese\nBer\u00fccksichtigung erm\u00f6glichen.\n\u2022   Sie k\u00f6nnen den Wert von Design Guidelines und Design Patterns f\u00fcr die Gestaltung interaktiver Systeme einsch\u00e4tzen, und verstehen die Abh\u00e4ngigkeiten zwischen\ninteraktiven und nicht-interaktiven Komponenten eines technischen Systems.\n\u2022   Studierende k\u00f6nnen nachvollziehen, warum Anforderungen und Bed\u00fcrfnisse von\nNutzer_innen oft widerspr\u00fcchlich und unvollst\u00e4ndig sind, und kennen Wege, um\ndamit trotzdem produktiv umgehen zu k\u00f6nnen.\nKognitive und praktische Kompetenzen:\n\u2022   Studierende verstehen das Wechselspiel zwischen Problem Setting und Problem\nSolving, und verstehen, wie man diese beiden Arbeiten im produktiven Wechselspiel einsetzt.\n\u2022   Sie k\u00f6nnen Methoden des nutzungsorientierten Designs anwenden.\n\u2022   Teilnehmer_innen k\u00f6nnen Werkzeuge des inklusiven, nutzerorientierten und partizipativen Designs anwenden.\n\u2022   In projektbasierter Arbeit kann der Wert der theoretisch erworbenen Kenntnisse\nerprobt und praktisch erfahren werden.\nSoziale Kompetenzen und Selbstkompetenzen: Studierende verstehen die Komplexit\u00e4t der\nBed\u00fcrfnisse der Nutzer_innen, f\u00fcr die sie Gestalten. Sie k\u00f6nnen kreative und innovative\nIdeen entwickeln, um so aussergew\u00f6hnliche L\u00f6sungen zu finden. Sie \u00fcben die Arbeit in\nGruppen, und \u00fcbernehmen Verantwortung f\u00fcr die Gestaltung technischer Systeme.\nInhalt:\n\u2022   Wesentliche Aspekten der Planung, Gestaltung und Entwicklung von Benutzerschnittstellen f\u00fcr interaktive Systeme\n\u2022   Grundlagen von User Interface Design\n\u2022   Verst\u00e4ndnis f\u00fcr Kriterien guter bzw. schlechter User Interfaces\n\u2022   grundlegende Designkonzepte und Gestaltungsprinzipien f\u00fcr die erfolgreiche Umsetzung von Benutzerschnittstellen\n\u2022   Methoden, Prozesse und Hilfsmittel f\u00fcr erfolgreiches Interface & Interaction Design\n\u2022   Ausblick auf aktuelle Trends und neue Interaktionskonzepte und Interfaces\nErwartete Vorkenntnisse:\nEs werden die Kenntnisse des Moduls Einf\u00fchrung in die Programmierung vorausgesetzt.\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Dieses Modul wird in der Form einer Vorlesung mit \u00dcbungen gehalten, in der einerseits die\ntheoretischen Inhalte vermittelt werden, welche wiederum in Form von \u00dcbungen in Kleingruppen mit unterschiedlichen \u00dcbungsbeispielen praktisch erlernt werden. Das Modul\numfasst einen Projektteil, der einerseits die Anwendung von Methoden und Techniken\nin einem konkreten Projekt erm\u00f6glicht und andererseits den Studierenden den Zugang\nwichtiger Systeme und Technologien, die f\u00fcr die Implementierung sozial eingebetteter\nSysteme notwendig sind, anbietet.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Interface and Interaction Design",
                        "not_steop_constrained": false,
                        "semester": "3. Semester (WS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "PR",
                        "name": "Interface and Interaction Design",
                        "not_steop_constrained": false,
                        "semester": "3. Semester (WS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Interface & Interaction Design",
                "wahl": false
            },
            {
                "ects": "10,0",
                "lernergebnisse": "Das Ziel dieses Moduls ist es, ein Verst\u00e4ndnis f\u00fcr unterschiedliche\nKontexte der Systementwicklung zu schaffen, die beispielsweise durch Gesetze, gesellschaftliche Zusammenh\u00e4nge und Wirkmechanismen, ethische und moralische Fragen wie\nauch organisatorische und sozialpsychologische Bedingungen gegeben sind. Studierende\nwerden in die Lage versetzt, entsprechende Aspekte der Software-Entwicklung zu verstehen und aktiv in die Entwicklung einzubringen. Durch das Modul erhalten Studierende\nein nachhaltiges Verst\u00e4ndnis der Konzepte, Fertigkeiten und Prozesse, mit denen juristische, inkonsistente, mehrdeutige und schwer formalisierbare Anforderungen an Systeme\nverstanden und ber\u00fccksichtigt werden k\u00f6nnen.\nFachliche und methodische Kompetenzen: Durch dieses Modul werden Studierende in die\nLage versetzt:\n\u2022   Gesetze und Regulierungen rund um die Entwicklung von vor allem medienbasierten technischen Systemen zu verstehen;\n\u2022   eine kritische Reflexion des sozialen, kognitiven und kulturellen Impacts von Technologien auf die Welt in das Design einfliessen zu lassen;\n\u2022   mittels Design Thinking komplexe und widerspr\u00fcchliche Interessenslagen in der\nGestaltung ber\u00fccksichtigen zu k\u00f6nnen;\n\u2022   die Methoden der HCI anzuwenden, um die Diversit\u00e4t und Komplexit\u00e4t von\nmenschlicher Arbeit in den Gestaltungsprozess ad\u00e4quat zu ber\u00fccksichtigen:\n\u2022   ein nachhaltiges, breites Verst\u00e4ndnis f\u00fcr einen Designprozess von Technologien zu\nentwickeln, der die durch Gesellschaft, Gesetze, Organisationen und individuelle\nBed\u00fcrfnisse gesetzten Rahmenbedingungen ber\u00fccksichtigt\nKognitive und praktische Kompetenzen:\n\u2022   Verwendung einfacher qualitative oder partizipative Herangehensweisen f\u00fcr die\nProblemformulierung und Probleml\u00f6sung;\n\u2022   Systematische Einbeziehung unterschiedlicher und widerspr\u00fcchlicher Interessen in\nden Entwicklungsprozess;\n\u2022   Kritische Reflexion der eigenen Arbeit in relevanten Kontexten;\n\u2022   Grundlegendes Wissen um juristische, ethische und sozialwissenschaftliche Grundlagen f\u00fcr die Systemgestaltung;\n\u2022   Einf\u00fchrendes Verst\u00e4ndnis der Arbeit mit offenen und schwammigen Anforderungssituationen;\n\u2022   Grundkompetenzen zur Einbettung der eigenen Arbeit in soziale, kulturelle, juristische und organisatorische Kontexte.\nSoziale Kompetenzen und Selbstkompetenzen: Studierende lernen unter anderem\n\u2022   Wissen systematisch zu kontextualisieren;\n\u2022   sich selbst Wissen zu erarbeiten in Bezug auf die Besonderheiten von Arbeit, Organisation und Freizeit, f\u00fcr die sie Systeme entwickeln;\n\u2022   den Wert der mehrdimensionalen Analyse von Situationen f\u00fcr das Design von\nTechnologie zu verstehen;\n\u2022   in Teams zu arbeiten;\n\u2022   die Notwendigkeit des Wechselspiels zwischen Problemformulierung und Probleml\u00f6sung;\n\u2022   in komplexen Projekten die Gestaltungsverantwortung zu \u00fcbernehmen.\nInhalt: Die Inhalte des Moduls umfassen:\n\u2022   Soziale und ethische Aspekte von Informations- und Kommunikationstechnologien;\n\u2022   User Experience und Interaction Design;\n\u2022   Participatory Design;\n\u2022   Methoden des User Research und der Evaluation;\n\u2022   f\u00fcr Informatiker/innen relevante Teile entsprechender Gesetze.\nErwartete Vorkenntnisse:\nDieses Modul baut auf den Kenntnissen, Fertigkeiten und Kompetenzen folgender Module auf: Denkweisen der Informatik, Einf\u00fchrung in die Programmierung, Modellierung,\nSoftware Engineering und Projektmanagement, Interface & Interaction Design\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Gesellschaftswissenschaftliche Grundlagen der Informatik",
                        "not_steop_constrained": false,
                        "semester": "5. Semester (WS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "4,0",
                        "lva_typ": "VU",
                        "name": "Socially Embedded Computing",
                        "not_steop_constrained": false,
                        "semester": "6. Semester (SS)",
                        "sst": "3,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Daten- und Informatikrecht",
                        "not_steop_constrained": false,
                        "semester": "4. Semester (SS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Kontexte der Systementwicklung",
                "wahl": false
            },
            {
                "ects": "7,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Das Modul vermittelt grundlegende Kenntnisse\nim Bereich Multimedia und ein kritisches Verst\u00e4ndnis ihrer Theorien und Grunds\u00e4tze:\n\u2022   Aufbau zeitabh\u00e4ngiger Medientypen\n\u2022   Kompression von Audio und Video\n\u2022   Inhaltsbeschreibung von Multimedia-Daten\n\u2022   Maschinelle Analyse von Mediendaten\nKognitive und praktische Kompetenzen: Durch die Auseinandersetzung mit aktuellen\nTechnologien, Methoden und Werkzeugen werden folgende kognitiven Fertigkeiten vermittelt:\n\u2022   Einsatz formaler Grundlagen und Methoden zur kreativen Modellbildung und L\u00f6sungsfindung\n\u2022   Entwicklung einer methodisch fundierten Herangehensweise an offene Problemsituationen\n\u2022   Aneignung von professionellen Entwurfs- und Implementierungsstrategien\nSoziale Kompetenzen und Selbstkompetenzen: Der Schwerpunkt liegt auf der besonderen\nF\u00f6rderung hoher Kreativit\u00e4ts- und Innovationspotentiale:\n\u2022   Eigeninitiative, Neugierde und Experimentierfreude\n\u2022   Selbstorganisation und Eigenverantwortlichkeit\n\u2022   Problemformulierungs- und Probleml\u00f6sungskompetenz\n\u2022   Kenntnis der eigenen F\u00e4higkeiten und Grenzen, Kritikf\u00e4higkeit\nInhalt:\n\u2022   Repr\u00e4sentation zeitabh\u00e4ngiger Medientypen\n\u2022   H\u00f6ren und Psychoakustik\n\u2022   Sehen und Psychovision\n\u2022   Technische Medien-Repr\u00e4sentation und Streaming\n\u2022   Audio-Kompression mit MP3 und AAC\n\u2022   Video-Kompression mit MPEG-4 und H.264\n\u2022   Inhaltsbeschreibung von Multimediadaten durch Signalverarbeitung\n\u2022   Klassifikation und Retrieval von Bild-, Audio- und Videodaten\n\u2022   Visualisierung von sowie Interaktion mit Mediendaten\nErwartete Vorkenntnisse: Um dieses Modul erfolgreich absolvieren zu k\u00f6nnen, sind\nfolgende Kenntnisse notwendig:\n\u2022   Mathematik: Vektorrechnung, Winkelfunktionen, Differenzial- und Integralrechnung, lineare Algebra\n\u2022   Fortgeschrittene Programmierkenntnisse\nDiese Voraussetzungen werden in folgenden Modulen vermittelt: Algebra und Diskrete\nMathematik, Algorithmen und Datenstrukturen, Analysis, Einf\u00fchrung in die Programmierung\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VO",
                        "name": "Multimedia",
                        "not_steop_constrained": false,
                        "semester": "5. Semester (WS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "4,0",
                        "lva_typ": "UE",
                        "name": "Multimedia",
                        "not_steop_constrained": false,
                        "semester": "5. Semester (WS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Multimedia",
                "wahl": false
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Dieses Modul befasst sich mit der UserResearch getriebenen Konzeption, Gestaltung und Evaluierung von Benutzerschnittstellen. Das Modul gliedert sich in zwei gro\u00dfe Teilgebiete: Im ersten Teil werden die\ngrundlegenden Konzepte von Usability Engineering gelehrt. Anhand von praxisnahen\nBeispielen sollen Studierende den Einsatz von Usability Engineering erlernen. Die gelehrten Methoden decken den gesamten Design Prozess von Requirements Engineering (z.B.\nKontextuelle Interviews), Prototyping bis hin zum Testen von Systemen (z.B. Usability\nTest, Heuristische Evaluierung) ab. Der zweite Teil dieses Moduls ist den Methoden der\nMobile Interaction Research gewidmet, mit besonderem Fokus auf aktuellen Entwicklungen und Trends. Aufbauend auf den Grundlagen des Usability Engineerings werden\nBesonderheiten und Spezifika sowohl im Design als auch in der Evaluierung von mobilen\nAnwendungen hervorgehoben.\nKognitive und praktische Kompetenzen: Das Modul vermittelt Kenntnisse \u00fcber Qualit\u00e4tskriterien f\u00fcr gute Usability sowie deren Evaluierung und Beurteilung anhand etablierter Usability Engineering Methoden und zeigt aktuelle Entwicklungen und zuk\u00fcnftige\nTrends im Bereich der Mobile Interaction auf.\nSoziale Kompetenzen und Selbstkompetenzen: Das Modul vermittelt die Bedeutung von\nUsability Engineering f\u00fcr den Erfolg von Softwareentwicklungsprojekten und geht auf\ndie M\u00f6glichkeiten und Herausforderungen der Einbindung von Usability Engineering\nMethoden in Software Engineering Prozessen ein.\nInhalt: Usability Engineering:\n\u2022   Einf\u00fchrung in Usability Engineering\n\u2022   Qualit\u00e4tskriterien f\u00fcr Usability Engineering und deren Messung und Beurteilung\n\u2022   Usability Engineering Lifecycle\n\u2022   Methoden des Usability Engineerings in Anlehnung an die Phasen des Human Centered Design Prozesses: Kontextanalyse, Requirementsanalyse, Design and Prototyping, Evaluierung\n\u2022   Praktische Anwendung der vorgestellten Methoden in einem \u00dcbungsteil\nPilots in Mobile Interaction: User-centered Interaction Research and Evaluation:\n\u2022   Einf\u00fchrung in User-centered Interaction Research\n\u2022   Quality of Experience Methods and Applications\n\u2022   Perceptual Quality for Mediated Interaction\n\u2022   Cognitive User Interfaces\n\u2022   Audio-Visual Speech Synthesis\n\u2022   Advanced Mobile Spatial Interaction\n\u2022   Rapid Prototyping for Future Mobile Interactions\n\u2022   Case Study of Mobile Interfaces in Large IT Projects\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: In\nForm von Vorlesungen mit \u00dcbungen werden die vertiefenden Inhalte vermittelt. In der\nVorlesung werden theoretische Grundlagen vermittelt. Die in der Vorlesung vorgestellten\nMethoden sind in einem praktischen \u00dcbungsteil umzusetzen.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Usability Engineering",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Pilots in Mobile Interaction: User-centered Interaction Research and Evaluation",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    }
                ],
                "name": "Usability Engineering and Mobile Interaction",
                "wahl": true
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen:\n\u2022   Learn how to best record audio, namely voice, in a less than perfect recording\nenvironment\n\u2022   Gain an understanding of basic audio theory\n\u2022   Gain the technical skills needed to edit and mix a short, simple audio production\n\u2022   Learn how to work effectively and efficiently with digital audio workstations\n\u2022   Discover the importance of group dynamics\n\u2022   Focus on single-camera field production and the technical and aesthetic elements\nneeded for a successful production\n\u2022   Learn the basic guidelines and significance of Composition\n\u2022   Develop an understanding of storytelling\n\u2022   Learn the basics and importance of editing to create the story\n\u2022   Lighting basics\n\u2022   Discover the importance of group dynamics\nKognitive und praktische Kompetenzen: Upon completion of these courses, an overall\nfiner understanding and appreciation of both video and audio will have been achieved\nincluding the following:\n\u2022   Knowledge of the basic workings of the audio signal and how it can be manipulated\nto achieve the desired sound.\n\u2022   Confidence working with microphones and the digital audio workstation.\n\u2022   Deeper comprehension of storytelling and composition\n\u2022   Confidence working with different cameras\n\u2022   Greater appreciation of time management\nSoziale Kompetenzen und Selbstkompetenzen:\n\u2022   Time management\n\u2022   Organization\n\u2022   Ability to work within a group\n\u2022   Willingness to absorb new ideas, to be critiqued and participate\nInhalt:\n\u2022   Basic audio theory\n\u2022   Introduction to audio hardware (microphones and audio interfaces)\n\u2022   Recording techniques\n\u2022   Introduction to the DAW\n\u2022   Audio editing\n\u2022   Audio mixing/processing\n\u2022   Video planning and pre-production\n\u2022   Shot composition\n\u2022   Video recording techniques\n\u2022   Basic storytelling\n\u2022   Lighting\n\u2022   Color Correction\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Lecture with practical exercises.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Audio Production",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Video Production",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    }
                ],
                "name": "Audio Production and Video Production",
                "wahl": true
            },
            {
                "ects": "9,0",
                "lernergebnisse": "Die Speicherbarkeit von Klang ist die \"Kopernikanische Wende\" in der\nMusikgeschichte. Nahezu alle Musik, die wir h\u00f6ren, hat viele Verarbeitungsschritte am\nComputer hinter sich. Das Modul Computermusik vermittelt geschichtliche, theoretische\nund soziale Grundlagen von Musik. Es erkl\u00e4rt den Einfluss bahnbrechender akustischer\nErkenntnisse und den Einfluss der Naturwissenschaften auf die Musik aller Stile und\nGattungen. Ausserdem werden die Anforderungen aktueller Musikproduktion er\u00f6rtert\nund durch eigene kreative Auseinandersetzung erfahrbar gemacht.\nFachliche und methodische Kompetenzen:\n\u2022   Einf\u00fchrung in die Elektroakustische Musik, den thematischen \u00dcberblick gewinnen;\n\u2022   Grundlegenden Themen der Musik kennen lernen, Musikgeschichte im \u00dcberblick,\nH\u00f6rbeispiele aus verschiedenen Epochen;\n\u2022   Verst\u00e4ndnis der Ver\u00e4nderung von Musik durch die technischen M\u00f6glichkeiten;\n\u2022   H\u00f6ren als erlernten Prozess verstehen, Kl\u00e4nge assoziativ deuten lernen;\n\u2022   das Massenph\u00e4nomen Musik verstehen und Qualit\u00e4tsmerkmale erkennen;\n\u2022   K\u00fcnstlerisch-musikalische Inhalte erkennen;\n\u2022   Grundlagen der Klangspeicherung kennenlernen;\n\u2022   Algorithmisierung der Musikparameter verstehen;\n\u2022   die FFT Analyse und Granularsynthese als zwei unterschiedliche Dom\u00e4nen der\nKlanganalyse und Klangtransformation verstehen;\n\u2022   die Produktionsbedingungen im Tonstudio kennen lernen;\nKognitive und praktische Kompetenzen:\n\u2022   K\u00fcnstlerisch-musikalische Inhalte gestalten und technisch umsetzen;\n\u2022   H\u00f6rerfahrung erweitern, Kl\u00e4nge und Musik beschreiben k\u00f6nnen und unterschiedliche Musikstile erkennen;\n\u2022   Grundlegende Tonmeisterarbeiten durchf\u00fchren k\u00f6nnen;\n\u2022   Sounddesign durchf\u00fchren;\n\u2022   einen einfachen Synthesizer programmieren k\u00f6nnen;\n\u2022   F\u00e4higkeit eine Mehrkanalsoftware mit Effekten und Midisteuerung anzuwenden;\n\u2022   Algorithmischen Compiler anwenden k\u00f6nnen;\n\u2022   eine Algorithmische Komposition erstellen;\n\u2022   einen \u2018Song\u2019 komponieren, aufnehmen und abmischen;\n\u2022   Klangcollagen mittels assoziativer Techniken erstellen;\nSoziale Kompetenzen und Selbstkompetenzen:\n\u2022   unterschiedliche Kreativit\u00e4tstechniken zur musiklischen Ideenfindung anwenden;\n\u2022   \u2018Musik schaffen\u2019 als pers\u00f6nliches Ausdrucksmittel erleben;\n\u2022   musikalisches Zusammenspiel mit Computern in Kleingruppen;\n\u2022   Musikblogs, soziale Netzwerke, Internetradio, uvm.\n\u2022   Innovationspotential angewandter Musik erkennen und erforschen (Signalt\u00f6ne,\nHandymusik, H\u00f6rger\u00e4te, usw.);\nInhalt: Elektroakustische Musik 1:\n\u2022   Musikgeschichte im \u00dcberblick nach profaner und kultischer Musik, horizontaler\nund vertikaler Gewichtung sowie sozialer Bez\u00fcge\n\u2022   die Geschichte der Elektronischen Musikinstrumente und deren Einfluss auf die\nMusik aller Stile und Gattungen - technische Musikgeschichte\n\u2022   formale Konzepte der Musik, Musikstile und Gattungen\n\u2022   Grundlagen der Akustik\n\u2022   Tonsysteme und deren physikalischen Grundlagen, rhythmische Systeme\n\u2022   Grundlagen Akustischer Compiler\n\u2022   Grundlagen Dynamischer Audiosoftware\n\u2022   Einf\u00fchrung in die Programmierung eines Synthesizers\n\u2022   Einf\u00fchrung in eine Mehrkanalsoftware\n\u2022   Sampling und Harddiskrecording, Datenformate\nElektroakustische Musik 2:\n\u2022   Komposition: Algorithmische Steuerung musikalischer Parameter in der Neuen Musik des 20Jhd.\n\u2022   Pioniere, Theoretiker und Komponisten Elektronischer Musik: Hermann von Helmholz, Feruccio Busoni, Edgard Var\u00e8se, Gottfried Michael K\u00f6nig, Iannis Xenakis\n\u2022   die Tonbandmusik der 60iger Jahre und deren Auswirkungen, musique concr\u00e8te,\nAkusmatik, Lautsprecherorchester und Musikingenieurswesen\n\u2022   Elektroakustische Musik als ideale Filmmusik f\u00fcr Sience Fiction\n\u2022   Analoge Klangsyntheseverfahren programmieren, Modulationssynthese, Additiveund Subtraktive Synthese\n\u2022   FFT Synthese und Granularsynthese\n\u2022   pitchshifting und timestretching in time und frequency domaine\n\u2022   erweiterte Klangtransformationen auf Grundlage der Frequenzanalyse\nMusikproduktion:\n\u2022   Einf\u00fchrung Popularmusik\n\u2022   Funktionsweise eines Tonstudios\n\u2022   die gebr\u00e4uchlichsten Ger\u00e4te und Software im Tonstudio\n\u2022   Workflow im Produktionsstudio\n\u2022   Midiverbindungen im Studio integrieren\n\u2022   Mikrophonkunde\n\u2022   Raumakustik\n\u2022   Tonmeisterarbeiten durchf\u00fchren\n\u2022   Grundz\u00fcge der Live Beschallung\n\u2022   Sounddesign\n\u2022   Vienna Symphonic Library und vergleichbare Produkte\nErwartete Vorkenntnisse: Vorteilhaft sind Erfahrung in der Umsetzung von k\u00fcnstlerischen Ideen am Computer und instrumentale Kenntnisse. Wichtig ist aber das Interesse\nan Kl\u00e4ngen und Offenheit gegen\u00fcber unterschiedlicher Musikstilen.\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung:\nLehr und Lernform:\n\u2022   Frontalunterricht\n\u2022   Klangbeispiele in spezifischen H\u00f6rsituationen\n\u2022   Gastvortr\u00e4ge\n\u2022   \u00dcbungen mit Einzelbetreuung\nLeistungsbeurteilung\n\u2022   Aufnahme unterschiedlicher Klangquellen\n\u2022   Erstellung einer Klangcollage\n\u2022   Kurzvortr\u00e4ge von Kleingruppen\n\u2022   Produktion eines eigenen Songs oder Klangsignets",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Elektroakustische Musik 1",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Elektroakustische Musik 2",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Musikproduktion",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    }
                ],
                "name": "Computermusik",
                "wahl": true
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Within the first weeks of course, groups will be\nformed and the creative process begins. Students will learn how to describe their ideas\nthrough a plot and treatment. Once their ideas are cohesive and clear, they can move on\nto the next step to build their dramatic script. Finally, it is up to the group to produce\ntheir idea using basic video production tools (camera, lighting sets, audio equipment).\nKognitive und praktische Kompetenzen: Upon completion, the student will have learned\nthe following:\n\u2022   Scriptwriting and Storytelling\n\u2022   Composition\n\u2022   Soundtrack creation\n\u2022   Group dynamics\nSoziale Kompetenzen und Selbstkompetenzen:\n\u2022   Individual responsibility\n\u2022   Time management\n\u2022   Organization\n\u2022   Ability to work within a group\n\u2022   Willingness to absorb new ideas, to be critiqued and participate\nInhalt: This course is has two sections: video and audio. In the video section, scriptwriting, storytelling and composition are learned. In the audio section, audio preproduction,\nbasic recording, soundtrack building and sound effects creation are learned.\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Lecture with practical exercises.",
                "lvas": [
                    {
                        "ects": "6,0",
                        "lva_typ": "VU",
                        "name": "Multimedia Produktion 1: Materialien und Tools",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "4,0"
                    }
                ],
                "name": "Multimedia-Produktion",
                "wahl": true
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen die Studierenden Folgendes beschreiben:\n\u2022   grundlegende Lern-Theorien, insbesondere aus dem Bereich der Kognitiven Psychologie (Behaviorismus, Kognitivismus, Konstruktivismus)\n\u2022   f\u00fcr die Gestaltung von Lernsystemen relevante Aspekte der HCI (affordances, Metaphern, \u2026)\n\u2022   grundlegende Kenntnisse aus ausgew\u00e4hlten Bereichen der Kognitiven Psychologie\n(Ged\u00e4chtnis, Wissensrepr\u00e4sentation)\nKognitive und praktische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen\ndie Studierenden systematische und kriteriengeleitete Entw\u00fcrfe f\u00fcr E-Learningsysteme\nerstelle, die auf lerntheoretischen Grundlagen beruhen und wichtige Ergebnisse der entsprechenden Forschung ber\u00fccksichtigen.\nSoziale Kompetenzen und Selbstkompetenzen: Nach positiver Absolvierung des Moduls\nk\u00f6nnen die Studierenden kritisch \u00fcber das Thema reflektieren und konstruktiv zu Gruppendiskussionen beitragen. Sie erlernen auch Pr\u00e4sentationstechniken.\nInhalt:\n\u2022   grundlegende Lern-Theorien, insbesondere aus dem Bereich der kognitiven Psychologie (Behaviorismus, Kognitivismus, Konstruktivismus)\n\u2022   f\u00fcr die Gestaltung von Lernsystemen relevante Aspekte der HCI (affordances, Metaphern, \u2026)\n\u2022   grundlegende Kenntnisse aus ausgew\u00e4hlten Bereichen der Kognitiven Psychologie\n(Ged\u00e4chtnis, Wissensrepr\u00e4sentation)\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Inhalte werden in Vortr\u00e4gen vorgestellt und in begleitenden \u00dcbungen von Studierenden\nerarbeitet. Arbeit in Gruppen ist m\u00f6glich, aber nicht zwingend. Es gibt einerseits Pr\u00fcfungen, andererseits wird eine \u00dcbungsaufgabe selbst\u00e4ndig gel\u00f6st. Bei dieser \u00dcbungsaufgabe\ngeht es um die Erstellung eines Konzepts f\u00fcr ein E-Learningsystem.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VO",
                        "name": "Vernetztes Lernen",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "UE",
                        "name": "Vernetztes Lernen",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    }
                ],
                "name": "Vernetztes Lernen",
                "wahl": true
            }
        ],
        "name": "HCI und Medieninformatik"
    },
    {
        "module": [
            {
                "ects": "9,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Reproduzieren bzw. Herleiten der wichtigsten\nmathematischen Definitionen, Theoreme und Beweismethoden der Algebra und Diskreten Mathematik.\nKognitive und praktische Kompetenzen: Finden von Beweisen f\u00fcr mathematische Problemstellungen aus Algebra und Diskreter Mathematik; Modellieren einfacher Anwendungsprobleme aus Informatik, Naturwissenschaften und Technik als mathematische\nProblemstellungen und L\u00f6sen derselben mit geeigneten mathematischen Methoden.\nSoziale Kompetenzen und Selbstkompetenzen: Pr\u00e4sentieren von Probleml\u00f6sungen vor einer \u00dcbungsgruppe.\nInhalt:\n\u2022   Grundlagen: elementare Logik (Aussagen, Implikation, Kontraposition, Verneinung, Quantoren); elementare Beweistechniken (direkter und indirekter Beweis,\nGegenbeispiele); elementare Zahlentheorie.\n\u2022   Mengenlehre: Grundlagen (Venn-Diagramme, Komplemente, kartesisches Produkt, Potenzmenge); Funktionen (Mengenrelationen, surjektive, injektive, bijektive Funktionen, Komposition); Relationen (\u00c4quivalenzrelation, Partitionen, Ordnungsrelation, Maximumsprinzip); Kardinalit\u00e4t und Abz\u00e4hlbarkeit (endliche, unendlichen und abz\u00e4hlbare Mengen).\n\u2022   Induktion: Induktionsprizip (vollst\u00e4ndige Ind., transfinite Ind.); rekursive Definitionen.\n\u2022   Grundlagen der Kombinatorik: Abz\u00e4hlprinzipien (Summen- und Produktregel);\nSchubfachschluss; Inklusions-Exklusions-Prinzip; kombinatorische Grundaufgaben\n(Permutationen, Auswahlen, Partitionen); elementare Identit\u00e4ten (Binomischer\nLehrsatz, binomische Identit\u00e4ten); Rekursionen (Fibonacci-Zahlen, Derangements,\nTurm von Hanoi); L\u00f6sungsmethoden f\u00fcr Rekursionen (Rekursionen erster Ordnungen, lineare Rekursionen mit konstanten Koeffizienten).\n\u2022   Graphentheorie: Grundlagen (gerichtete, ungerichtete, bipartite Graphen, Wege,\netc.); Handshake-Lemma; Eulersche und Hamiltonsche Linien; Graphrelationen\n(Isomorphie, Subgraphen, Minore); Zusammenhang (Zusammenhangskomponenten, Menger\u2019s theorem); azyklische Graphen; ebene Graphen (inkl. Eulersche Polyederformel); elementare Graph-Algorithmen (Azyklizit\u00e4t, Kruskal-Alg., minimaler\nSpannbaum, Dijkstra-Alg.).\n\u2022   Algebraische Strukturen: Gruppentheorie (inkl. Faktorgruppen, Homomorphiesatz,\nzyklische Gruppen, direkte Produkte); Ringe (Integrit\u00e4tsbereiche, Ideale); K\u00f6rper\n(Polynomringe \u00fcber K\u00f6rpern); Verb\u00e4nde.\n\u2022   Lineare Algebra: Vektoren; Matrizen; lineare Abbildungen; lineare Gleichungssysteme; Determinanten; Eigenwerte und Eigenvektoren; Skalarprodukte, Orthogonalit\u00e4t.\n\u2022   Grundlagen algebraische Codierungstheorie: Gruppencodes, Linearcodes.\nErwartete Vorkenntnisse: Fundierte Mathematik-Kenntnisse auf AHS/BHS-Maturaniveau.\nVerpflichtende Voraussetzungen: Keine.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: W\u00f6chentliche Vorlesung mit kontinuierlicher begleitender \u00dcbung (individuell auszuarbeitende \u00dcbungsbeispiele, L\u00f6sungspr\u00e4sentation an der Tafel), wodurch die in der Vorlesung\nvermittelten Inhalte effizient erlernt und die mathematische Probleml\u00f6sungskompetenz\ntrainiert wird. Leistungsfeststellung durch mehrere L\u00f6sungspr\u00e4sentationen, \u00dcbungstests,\nAbschlusspr\u00fcfung.",
                "lvas": [
                    {
                        "ects": "4,0",
                        "lva_typ": "VO",
                        "name": "Algebra und Diskrete Mathematik f\u00fcr Informatik und Wirtschaftsinformatik",
                        "not_steop_constrained": true,
                        "semester": "1. Semester (WS)",
                        "sst": "4,0"
                    },
                    {
                        "ects": "5,0",
                        "lva_typ": "UE",
                        "name": "Algebra und Diskrete Mathematik f\u00fcr Informatik und Wirtschaftsinformatik",
                        "not_steop_constrained": true,
                        "semester": "1. Semester (WS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Algebra und Diskrete Mathematik",
                "wahl": false
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Reproduzieren bzw. Herleiten der wichtigsten mathematischen Definitionen, Theoreme und Beweismethoden der mathematischen\nAnalysis.\nKognitive und praktische Kompetenzen: Finden von Beweisen f\u00fcr mathematische Problemstellungen aus der Analysis; Modellieren einfacher Anwendungsprobleme aus Informatik, Naturwissenschaften und Technik als mathematische Problemstellungen und\nL\u00f6sen derselben mit geeigneten Verfahren zur analytischen und numerischen Probleml\u00f6sung.\nSoziale Kompetenzen und Selbstkompetenzen: Pr\u00e4sentieren von Probleml\u00f6sungen vor einer \u00dcbungsgruppe.\nInhalt:\n\u2022   Folgen, Reihen und Funktionen: Folgen reeller Zahlen (Grenzwert, Monotonie und\nBeschr\u00e4nktheit, Konvergenzuntersuchungen); unendliche Reihen (Konvergenzkriterien, Cauchyprodukt und Potenzreihen); asymptotischer Vergleich von Folgen\n(Landausymbole: O(), o(), \u2126()).\n\u2022   Elementare Funktionen: Potenzen mit reellen Exponenten; Exponentialfunktion\nund Logarithmus; Darstellung der Exponentialfunktion; Winkelfunktionen und Arcusfunktionen.\n\u2022   Grenzwerte und Nullstellen von Funktionen, Stetigkeit: metrische und topologische\nGrundbegriffe (offene, geschlossene Mengen, Umgebungen, Basis, H\u00e4ufungspunkte); Umgebungs und Folgenstetigkeit Eigenschaften stetiger Funktionen: Nullstellensatz, Zwischenwertsatz, Monotonie.\n\u2022   Differentialrechnung in einer Variablen: Differenzenquotient und Differenzierbarkeit; Ableitung einfacher Funktionen; Eigenschaften und Ableitungsregeln; Mittelwertsatz der Differentialrechnung; Taylorreihen; Monotonie und die erste Ableitung; h\u00f6here Ableitungen; verallgemeinerter Mittelwertsatz und die Regel von de\nl\u2019Hospital.\n\u2022   Integralrechnung in einer Variablen: Definition und Eigenschaften Riemann-Integral; Integration als Umkehrung der Differentiation, Fl\u00e4che unter Kurven; Techniken des Integrierens; Mittelwert- und Hauptsatz der Differential- und Integralrechnung; uneigentliche Integrale.\n\u2022   Elementare Differentialgleichungen: lineare Differentialgleichungen erster Ordnung.\n\u2022   Grundlagen Differentialrechnung in mehreren Variablen: Funktionen in mehreren\nVariablen; partielle Ableitungen, totale Ableitung; Ableitungsregeln; Richtungsableitung; Taylorentwicklung; Hauptsatz \u00fcber implizite Funktionen; lokale Extrema.\n\u2022   Computer-Numerik: Zahlendarstellungsfehler; Konversionsfehler; Fehlerfortpflanzung (Summe, Produkte, Polynome, elementare Funktionen); algorithmische Fehlerfortpflanzung, Konditionszahlen.\nErwartete Vorkenntnisse: Fundierte Mathematik-Kenntnisse auf AHS/BHS-Maturaniveau.\nVerpflichtende Voraussetzungen: Keine.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: W\u00f6chentliche Vorlesungen mit kontinuierlich begleitender \u00dcbung (individuell auszuarbeitende \u00dcbungsbeispiele, L\u00f6sungspr\u00e4sentation an der Tafel), wodurch die in der Vorlesung\nvermittelten Inhalte effizient erlernt und die mathematische Probleml\u00f6sungskompetenz\ntrainiert wird. Leistungsfeststellung durch mehrere L\u00f6sungspr\u00e4sentationen, \u00dcbungstests,\nAbschlusspr\u00fcfung.",
                "lvas": [
                    {
                        "ects": "2,0",
                        "lva_typ": "VO",
                        "name": "Analysis f\u00fcr Informatik und Wirtschaftsinformatik",
                        "not_steop_constrained": true,
                        "semester": "2. Semester (SS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "4,0",
                        "lva_typ": "UE",
                        "name": "Analysis f\u00fcr Informatik und Wirtschaftsinformatik",
                        "not_steop_constrained": true,
                        "semester": "2. Semester (SS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Analysis",
                "wahl": false
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Vermittlung der statistischen Denk- und Arbeitsweise\nFachliche und methodische Kompetenzen: Grundlagen der Wahrscheinlichkeitstheorie;\nKenntnisse von statistischer Sch\u00e4tzung und statistischem Testen; Kenntisse wichtiger\nstatistischer Methoden\nKognitive und praktische Kompetenzen: Anwendung von statistischen Methodiken auf\nkonkrete Problemstellungen; Kenntnisse im Umgang mit statistischer Software\nSoziale Kompetenzen und Selbstkompetenzen: Umsetzung von konkreten Aufgaben in\nstatistische Problemstellungen; L\u00f6sung statistischer Problemstellungen sowohl formal\nals auch mit dem Computer\nInhalt: Dieses Modul vermittelt im Einzelnen folgende Themen: Beschreibende Statistik,\nGrundlagen der Wahrscheinlichkeitstheorie, Elementare Informationstheorie, Zufallsvariablen und Verteilungen, Punkt- und Intervallsch\u00e4tzungen, Tests von Hypothesen, Varianzanalyse, Regression, Korrelation, Z\u00e4hlstatistik.\nErwartete Vorkenntnisse: Grundkenntnisse der Analysis und Algebra.\nDiese Voraussetzungen werden in folgenden Modulen vermittelt: Algebra und Diskrete\nMathematik, Analysis\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Die\nLehrveranstaltung Statistik und Wahrscheinlichkeitstheorie besteht aus einem Vorlesungsteil und einem \u00dcbungsteil. Die beschriebenen Inhalte und Konzepte werden im\nRahmen der Vorlesungseinheit erl\u00e4utert. Der \u00dcbungsteil besteht aus einem Teil, bei\ndem Beispiele analytisch gel\u00f6st werden, und einem Teil, bei dem praktische Problemstellungen mit Hilfe statistischer Software gel\u00f6st werden. Diese Veranstaltungen sollen\nsowohl im Winter- als auch im Sommersemester angeboten werden.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VO",
                        "name": "Statistik und Wahrscheinlichkeitstheorie",
                        "not_steop_constrained": false,
                        "semester": "3. Semester (WS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "UE",
                        "name": "Statistik und Wahrscheinlichkeitstheorie",
                        "not_steop_constrained": false,
                        "semester": "3. Semester (WS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Statistik und Wahrscheinlichkeitstheorie",
                "wahl": false
            }
        ],
        "name": "Mathematik und Statistik"
    },
    {
        "module": [
            {
                "ects": "8,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen Studierende Folgendes beschreiben:\n\u2022   fundamentale Algorithmen und Datenstrukturen,\n\u2022   Methoden zur Bewertung und Analyse von Algorithmen, und\n\u2022   eine systematische Vorgehensweise zur Entwicklung von Algorithmen.\nKognitive und praktische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen\ndie Studierenden:\n\u2022   abstrakt und effizienzorientiert an die Entwicklung von Algorithmen herangehen,\n\u2022   theoretisch fundierte Methoden zur Analyse von Algorithmen benutzen, und\n\u2022   ihre Kenntnisse von fundamentalen Algorithmen und Datenstrukturen anwenden.\nSoziale Kompetenzen und Selbstkompetenzen: Nach positiver Absolvierung des Moduls\nk\u00f6nnen die Studierenden:\n\u2022   selbstorganisiert und eigenverantwortlich effiziente L\u00f6sungsans\u00e4tze entwickeln und\n\u2022   die eigenen L\u00f6sungsans\u00e4tze pr\u00e4sentieren.\nInhalt:\n\u2022   Fundamentale Prinzipien der Algorithmenanalyse\n\u2022   Asymptotische Schranken f\u00fcr Laufzeit und Speicherplatzbedarf\n\u2022   Fundamentale Datenstrukturen (z.B. Listen, Graphen, Suchb\u00e4ume)\n\u2022   Fundamentale algorithmische Prinzipien (z.B. Greedy, Divide-and-Conquer,\nBranch-and-Bound, Approximation, Dynamische Programmierung, Lokale Suche,\nHashing)\n\u2022   Probleml\u00f6sungsstrategien und Optimierung\n\u2022   Handhabbarkeit, Polynomialzeitreduktionen, NP-Vollst\u00e4ndigkeit\nErwartete Vorkenntnisse: Inhalte der LVA Einf\u00fchrung in die Programmierung 1 sowie\nfundierte Mathematik-Kenntnisse auf AHS/BHS-Maturaniveau.\nVerpflichtende Voraussetzungen: Keine.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Inhalte werden in Vortr\u00e4gen vorgestellt und in begleitenden \u00dcbungen von Studierenden\nerarbeitet. \u00dcbungsaufgaben bestehen vorwiegend aus Aufgaben die schriftlich ausgearbeitet werden. Sie werden \u00f6rtlich ungebunden innerhalb vorgegebener Fristen gel\u00f6st, die\nL\u00f6sungen werden in \u00dcbungsgruppen vorgestellt. Die Beurteilung erfolgt auf Basis mehrerer schriftlicher Tests und der kontinuierlich in den \u00dcbungen erbrachten Leistungen.",
                "lvas": [
                    {
                        "ects": "8,0",
                        "lva_typ": "VU",
                        "name": "Algorithmen und Datenstrukturen",
                        "not_steop_constrained": true,
                        "semester": "2. Semester (SS)",
                        "sst": "5,5"
                    }
                ],
                "name": "Algorithmen und Datenstrukturen",
                "wahl": false
            },
            {
                "ects": "12,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen die Studierenden\n\u2022   geeignete Modellierungskonzepte zur Modellierung eines Systems w\u00e4hlen,\n\u2022   ein System mit Hilfe von geeigneten Modellen beschreiben,\n\u2022   syntaktische und semantische Fehler in einem Modell erkennen und korrigieren,\n\u2022   Datenbankschemata entwerfen bzw. aus Modellen ableiten,\n\u2022   Abfagen an ein Datenbankschema formulieren,\n\u2022   Fundamentale Konzepte und Resultate der Mathematischen Logik, Automaten und\nformalen Sprachen, Berechenbarkeit und Komplexit\u00e4t sowie der formalen Semantik\nvon Programmiersprachen verstehen.,\n\u2022   Grundlegende Merkmale, Konzepte und Techniken des relationalen Datenmodells\nmittels fachspezifischer Terminologie beschreiben.\nKognitive und praktische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen\ndie Studierenden\n\u2022   Inhalte nat\u00fcrlichsprachiger Aufgaben in entsprechenden Modellen abbilden,\n\u2022   f\u00fcr solche Aufgaben Datenbankschemata entwerfen und Abfragen durchf\u00fchren,\n\u2022   Modelle eines Systems und Datenbankschemata analysieren und kritisieren,\n\u2022   verschiedene alternative Modelle bzw. Datenbankentw\u00fcrfe f\u00fcr ein System beurteilen.\n\u2022   ein deklaratives Programmierparadigma (SQL) anwenden,\n\u2022   Datenmodelle mittels ER- und EER-Diagrammen erstellen,\n\u2022   EER-Diagramme in ein relationales Schema in 3. Normalform umsetzen,\n\u2022   SQL f\u00fcr die Manipulation und Abfrage von Daten verwenden.\nSoziale Kompetenzen und Selbstkompetenzen: Nach positiver Absolvierung des Moduls\nk\u00f6nnen die Studierenden\n\u2022   Modellierungsaufgaben selbst\u00e4ndig l\u00f6sen,\n\u2022   anderen ihre Modelle kommunizieren,\n\u2022   Modelle gemeinsam in Kleingruppen erarbeiten.\nInhalt:\n\u2022   Aussagenlogik\n\u2022   Pr\u00e4dikatenlogik als Spezifikationssprache\n\u2022   Endliche Automaten und regul\u00e4re Ausdr\u00fccke\n\u2022   Formale Grammatiken\n\u2022   Petri-Netze\n\u2022   Klassen- und Objektdiagramm\n\u2022   Sequenzdiagramm\n\u2022   Zustandsdiagramm\n\u2022   Aktivit\u00e4tsdiagramm\n\u2022   Anwendungsfalldiagramm\n\u2022   Datenbankentwurf, Datenmodellierung mittels ER- und EER-Diagrammen\n\u2022   Relationales Datenmodell\n\u2022   Umsetzung eines EER-Diagramms in ein relationales Schema in dritter Normalform\n\u2022   Funktionale Abh\u00e4ngigkeiten, Normalformen\n\u2022   Relationale Abfragesprachen (relationale Algebra, Relationenkalk\u00fcl,\n\u2022   Datenbankentwurf, Datenmodellierung mittels ER- und EER-Diagrammen,\n\u2022   relationales Datenmodell,\n\u2022   Umsetzung eines EER-Diagramms in ein relationales Schema in dritter Normalform,\n\u2022   funktionale Abh\u00e4ngigkeiten, Normalformen,\n\u2022   relationale Abfragesprachen (relationale Algebra, Relationenkalk\u00fcl, SQL),\n\u2022   komplexe Schemadefinitionen (Constraints, Views),\n\u2022   Mathematische Logik: Aussagenlogik, Pr\u00e4dikatenlogik, elementare Modallogiken\nwie LTL, Kripkemodelle, Kalk\u00fclbegriff, logische Struktur formaler Beweise\n\u2022   Automatentheorie: endliche Automaten, B\u00fcchiautomaten, Transducer, Operationen auf Automaten\n\u2022   Formale Sprachen: Chomsky Hierarchie\n\u2022   Berechenbarkeit und Komplexit\u00e4t: universelle Berechenbarkeit, Unentscheidbarkeit, NP-Vollst\u00e4ndigkeit SQL)\nErwartete Vorkenntnisse: Keine.\nVerpflichtende Voraussetzungen: Keine.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Inhalte werden in Vortr\u00e4gen vorgestellt und in begleitenden \u00dcbungen von Studierenden\nerarbeitet. Die Beurteilung erfolgt auf Basis schriftlicher Tests und kontinuierlich in\n\u00dcbungen erbrachter Leistungen.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Objektorientierte Modellierung",
                        "not_steop_constrained": true,
                        "semester": "2. Semester (SS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Formale Modellierung",
                        "not_steop_constrained": true,
                        "semester": "2. Semester (SS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Einf\u00fchrung in die Theoretische Informatik und Logik",
                        "not_steop_constrained": false,
                        "semester": "4. Semester (SS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Datenmodellierung",
                        "not_steop_constrained": false,
                        "semester": "3. Semester (WS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Modellierung",
                "wahl": false
            },
            {
                "ects": "9,5",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen die Studierenden Folgendes beschreiben:\n\u2022   systematische Vorgehensweisen bei der Programmierung (einschlie\u00dflich Erstellen,\nNachvollziehen, Debuggen, Modifizieren und Dokumentieren von Programmen),\n\u2022   wichtige Konzepte einer aktuellen alltagstauglichen Programmiersprache,\n\u2022   ausgew\u00e4hlte Algorithmen, Datenstrukturen und Datenabstraktionen,\n\u2022   h\u00e4ufige Fehlerquellen und Techniken zur Qualit\u00e4tssicherung.\nKognitive und praktische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen\ndie Studierenden\n\u2022   Inhalte nat\u00fcrlichsprachiger Programmieraufgaben in ausf\u00fchrbare Programme umsetzen,\n\u2022   Vorgehensweisen und Werkzeuge beim Programmieren systematisch anwenden,\n\u2022   beschriebene Datenabstraktionen, Algorithmen und Datenstrukturen implementieren,\n\u2022   einfache Ma\u00dfnahmen zur Verbesserung der Qualit\u00e4t von Programmen anwenden.\nSoziale Kompetenzen und Selbstkompetenzen: Nach positiver Absolvierung des Moduls\nk\u00f6nnen die Studierenden\n\u2022   Programmieraufgaben selbst\u00e4ndig l\u00f6sen sowie in Zweierteams zusammenarbeiten,\n\u2022   Programmeigenschaften kommunizieren.\nInhalt:\n\u2022   Prozedurale Programmierkonzepte (Variablen, Datentypen, Operatoren, Verzweigungen, Schleifen, Arrays, Unterprogramme)\n\u2022   Fundamentale Entwicklungsmethoden (prozedurale Abstraktion, dynamisches und\nstatisches Programmverstehen, Pr\u00fcfen auf Korrektheit, Debugging) und Programmierwerkzeuge einschlie\u00dflich einer Programmierumgebung\n\u2022   Rekursion\n\u2022   Ein- und Ausgabe mit \u00dcberpr\u00fcfung von Eingaben\n\u2022   Datenabstraktion\n\u2022   Implementierung und wesentliche Eigenschaften rekursiver Datenstrukturen (Listen und B\u00e4ume)\n\u2022   Grundlegende Algorithmen (Einf\u00fcgen, L\u00f6schen, Suchen, Sortieren, Vergleichen,\nKonvertieren) f\u00fcr verschiedene Datenstrukturen\n\u2022   Abstraktion \u00fcber Datenstrukturen mit vergleichbaren Zugriffsfunktionen\n\u2022   Exception-Handling\n\u2022   Einfache Testmethoden und Code-Review\n\u2022   Ans\u00e4tze zur Programmoptimierung\n\u2022   Programmierstile und Programmdokumentation\nErwartete Vorkenntnisse: Keine.\nVerpflichtende Voraussetzungen: Keine.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Inhalte werden in Vortr\u00e4gen vorgestellt und in begleitenden \u00dcbungen von Studierenden\nerarbeitet. \u00dcbungsaufgaben sind vorwiegend Programmieraufgaben. Sie werden zu einem\nTeil \u00f6rtlich ungebunden (f\u00fcr einige Aufgaben in Zweierteams) innerhalb vorgegebener\nFristen, zum anderen Teil unter kontrollierten Bedingungen selbst\u00e4ndig gel\u00f6st. Die Beurteilung erfolgt auf Basis schriftlicher Tests und kontinuierlich in \u00dcbungen erbrachter\nLeistungen.",
                "lvas": [
                    {
                        "ects": "5,5",
                        "lva_typ": "VU",
                        "name": "Einf\u00fchrung in die Programmierung 1",
                        "not_steop_constrained": true,
                        "semester": "1. Semester (WS)",
                        "sst": "4,0"
                    },
                    {
                        "ects": "4,0",
                        "lva_typ": "VU",
                        "name": "Einf\u00fchrung in die Programmierung 2",
                        "not_steop_constrained": true,
                        "semester": "2. Semester (SS)",
                        "sst": "3,0"
                    }
                ],
                "name": "Einf\u00fchrung in die Programmierung",
                "wahl": false
            },
            {
                "ects": "12,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen die Studierenden die unter \"Inhalt\" angef\u00fchrten Konzepte und Techniken erkl\u00e4ren.\nKognitive und praktische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen\ndie Studierenden:\n\u2022   Ein praxisrelevantes Software-Prozessmodells (z.B. Unified Process oder Scrum)\nanwenden\n\u2022   Konzepte und Methoden f\u00fcr die einzelnen Phasen eines Software-EngineeringProjekts anwenden (etwa Algorithmen, Datenstrukturen und Programmierung,\nDatenbanken)\n\u2022   Konzepte, Modelle und Werkzeuge im Rahmen eines mittelgro\u00dfen SoftwareEntwicklungsprojekts ausw\u00e4hlen und anwenden\n\u2022   Techniken f\u00fcr Abstraktion und Modellbildung in der Softwaretechnik anwenden\n\u2022   Hochwertige Planung und Dokumentation herstellen bzw. anpassen\nSoziale Kompetenzen und Selbstkompetenzen: Nach positiver Absolvierung des Moduls\nk\u00f6nnen die Studierenden:\n\u2022   Software Engineering Probleme in einem verteilt arbeitenden Team l\u00f6sen\n\u2022   Entscheidungen einer Rolle in einem Projekt verantworten, etwa Teamkoordinator,\nTechnischer Architekt, Tester\n\u2022   Wissen in einem mittelgro\u00dfen Team sammeln und pflegen\n\u2022   Projektergebnisse pr\u00e4sentieren\nInhalt: Inhalte des Vorlesungsteils:\n\u2022   Einf\u00fchrung in Software Engineering: Projekttypen\n\u2022   Vorgehensmodelle und Rollen im Software Engineering\n\u2022   Methoden der Softwaretechnik (aus dem IEEE Software Engineering Body of\nKnowledge)\n\u2022   Anforderungsanalyse und Spezifikation\n\u2022   Modellierung von Anwendungsszenarien: Daten- und Kontrollflussmodelle in UML\n\u2022   Systementwurf, Methoden der Implementierung\n\u2022   Grundkenntnisse der Qualit\u00e4tssicherung im Kontext der Softwareentwicklung\n\u2022   Integration und Test\n\u2022   Technische Grundlagen: Techniken und Werkzeuge\n\u2022   Test Driven Development (TDD)\n\u2022   Projektmanagement: Projektauftrag, Umfeldanalyse; Strukturpl\u00e4ne und Planungsablauf; Team Management\nInhalte des \u00dcbungsteils:\n\u2022   Einen agilen Software-Prozess, etwa Scrum, anwenden\n\u2022   Siehe praktische Kompetenzen des Moduls\nErwartete Vorkenntnisse:\nFachliche und methodische Kompetenzen:\n\u2022   Objektorientierte Analyse, Design und Programmierung\n\u2022   Grundlagen der Unified Modeling Language (UML)\n\u2022   Grundkenntnisse aus Algorithmen und Datenstrukturen\n\u2022   Grundkenntnisse zu Datenbanksystemen\nKognitive und praktische Kompetenzen:\n\u2022   Eine praxisrelevante Programmiersprache und -werkzeuge (z.B. Java oder C++)\nanwenden\n\u2022   Eine Integrierten Entwicklungsumgebung und Quellcodeverwaltung anwenden\nDiese Voraussetzungen werden in folgenden Modulen vermittelt: Einf\u00fchrung in die Programmierung, Modellierung\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Inhalte (theoretische Konzepte und methodische Grundlagen) werden in Vortr\u00e4gen vorgestellt und in begleitenden \u00dcbungen von Studierenden erarbeitet. Auffrischung der\nVorkenntnisse in Tutorien zu Beginn des Projekts. In der Vorlesung werden Erfahrungen\naus der praktischen \u00dcbung reflektiert. \u00dcbungsaufgaben ergeben sich aus der Entwicklung eines mittelgro\u00dfes Software Engineering Projekt mit dem Ziel eines real brauchbaren Software-Prototyps und zugeh\u00f6riger Dokumentation. Diese \u00dcbungsaufgaben sind\ninnerhalb vereinbarter Fristen individuell und im Team von 4 bis 6 Personen zu l\u00f6sen. Intensive Betreuung der Teams in w\u00f6chentlichen Treffen mit dem Tutor. Intensiver\nEinsatz von entsprechenden Werkzeugen z.B. Integrierten Entwicklungsumgebung und\nQuellcodeverwaltung sowie Testautomatisierung zur Umsetzung der SE-Konzepte und\n-Methoden. Die Beurteilung erfolgt auf Basis eines Eingangstests, um die Vorkenntnisse\nzu \u00fcberpr\u00fcfen, einer kontinuierlichen \u00dcberpr\u00fcfung der L\u00f6sungen der \u00dcbungsaufgaben,\ndurch Reviews der Ergebnisse sowie durch Pr\u00fcfungen bzw. Tests.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Objektorientierte Programmiertechniken",
                        "not_steop_constrained": false,
                        "semester": "3. Semester (WS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VO",
                        "name": "Software Engineering und Projektmanagement",
                        "not_steop_constrained": false,
                        "semester": "4. Semester (SS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "6,0",
                        "lva_typ": "PR",
                        "name": "Software Engineering und Projektmanagement",
                        "not_steop_constrained": false,
                        "semester": "4. Semester (SS)",
                        "sst": "4,0"
                    }
                ],
                "name": "Software Engineering und Projektmanagement",
                "wahl": false
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen:\n\u2022   Das Modul vermittelt ein breites und integriertes Wissen und Verstehen der wissenschaftlichen Grundlagen der Entwicklung von Web-Anwendungen, welches wesentlich \u00fcber das auf der Ebene der Universit\u00e4tszugangsberechtigung vorhandene\nWissen hinausgeht.\n\u2022   Die Studierenden sind bef\u00e4higt Problemdom\u00e4nen zu beherrschen, die sich durch\nwenig strukturierte Information auszeichnen.\n\u2022   Die Studierenden verf\u00fcgen \u00fcber ein kritisches Verst\u00e4ndnis der wichtigsten Theorien, Prinzipien und Konzepte zur Entwicklung von Web-Anwendungen.\n\u2022   Das Wissen und Verst\u00e4ndnis der Studierenden entspricht dem Stand der Fachliteratur in diesem Bereich.\nKognitive und praktische Kompetenzen:\n\u2022   Die Studierenden k\u00f6nnen ihr Wissen und Verstehen praktisch zur L\u00f6sung von\nAufgaben im Bereich der Web-Anwendungsentwicklung umsetzen.\n\u2022   Die Studierenden k\u00f6nnen f\u00fcr die jeweilig vorliegende Aufgabenstellung relevante\nInformationen sammeln, strukturieren, bewerten und interpretieren.\nSoziale Kompetenzen und Selbstkompetenzen:\n\u2022   Die Studierenden sind in der Lage ihr Wissen selbst\u00e4ndig zu vertiefen.\n\u2022   Die Studierenden k\u00f6nnen entwicklungsbezogene Positionen und Probleml\u00f6sungen\nformulieren, sich mit InformatikerInnen und Dom\u00e4nenexpertInnen dar\u00fcber austauschen und Verantwortung in einem Team \u00fcbernehmen.\n\u2022   Die Studierenden lernen ihre eigenen F\u00e4higkeiten und Grenzen einzusch\u00e4tzen und\nerwerben die Kritikf\u00e4higkeit an der eigenen Arbeit.\n\u2022   Die Studierenden erlernen Selbstorganisation und Eigenverantwortlichkeit zum eigenst\u00e4ndigen L\u00f6sen von Aufgaben.\nInhalt:\n\u2022   Grundlagen: Begriffsdefinitionen; Grundlagen semistrukturierter Daten; Architekturelle Grundlagen des World Wide Web; Grundlagen von Web-Anwendungen.\n\u2022   Sprachen und Technologien: Grundlagen von Markup-Sprachen; Schemasprachen;\nAbfragesprachen; Web-Modellierungssprachen; Technologien f\u00fcr dynamische WebAnwendungen; Web Services.\n\u2022   Umsetzung und praktische Realisierung: Barrierefreie Web-Anwendungen; Entwicklungsprozess; Entwurfsmuster; Entwicklungs-APIs; Stylesheets.\nErwartete Vorkenntnisse:\nEs werden die Fertigkeiten und Kenntnisse folgender Module ben\u00f6tigt: Einf\u00fchrung in\ndie Programmierung, Modellierung.\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Die\nInhalte werden durch Vortragseinheiten vermittelt und durch theoretische und praktische\n\u00dcbungen ge\u00fcbt. Die Beurteilung basiert auf Test \u00fcber den vorgetragenen Stoff sowie auf\nden erbrachten Leistungen in den \u00dcbungen.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Semistrukturierte Daten",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Web Engineering",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    }
                ],
                "name": "Entwicklung von Web-Anwendungen",
                "wahl": true
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen die Studierenden Folgendes erkl\u00e4ren:\n\u2022   Motivation und Ziele der Softwarequalit\u00e4tssicherung\n\u2022   Definition und Messung von Qualit\u00e4t\n\u2022   Organisatorische Qualit\u00e4tssicherung\n\u2022   Statische und dynamische Methoden der Qualit\u00e4tssicherung\n\u2022   Methoden zur Sicherstellung und Verbesserung der Qualit\u00e4t von Produkten.\nKognitive und praktische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen\ndie Studierenden:\n\u2022   Passende QS-Methoden in einem Entwicklungsprojekt ausw\u00e4hlen\n\u2022   Statische und dynamische Methoden zur Software-Qualit\u00e4tssicherung anwenden\nSoziale Kompetenzen und Selbstkompetenzen: Nach positiver Absolvierung des Moduls\nk\u00f6nnen die Studierenden:\n\u2022   Einen Qualit\u00e4tsplan pr\u00e4sentieren\nInhalt: Inhalte des Vorlesungsteils:\n\u2022   Grundlagen der Software-Qualit\u00e4tssicherung\n\u2022   Qualit\u00e4tskontrolle und Fehlerreduktion: Reviews und Inspektionen\n\u2022   Dynamische Qualit\u00e4tssicherung\n\u2022   Organisatorische Qualit\u00e4tssicherung\n\u2022   Qualit\u00e4tssicherungs-Standards\n\u2022   Testprozess\nInhalte des \u00dcbungsteils:\n\u2022   Review von Software-Modellen\n\u2022   Kollaborative Code-Inspektionen\n\u2022   Statische Code Analyse / Antipattern Analyse\n\u2022   Test-Driven Development\n\u2022   Testplanerstellung inkl. Methoden f\u00fcr das Ableiten von Testf\u00e4llen\n\u2022   Testautomatisierung Blackbox/Whitebox\n\u2022   Testen in agilen Prozessen\nErwartete Vorkenntnisse:\nFachliche und methodische Kompetenzen: Es wird erwartet, dass Studierende vor Absolvierung des Moduls kennen:\n\u2022   Grundlagen der Mathematik und Statistik\n\u2022   Grundlagen der Unified Modeling Language (UML)\n\u2022   Objektorientierte Analyse, Design und Programmierung\n\u2022   Grundlegende Design-Patterns in der Programmierung\n\u2022   Grundkenntnisse zu Datenbanksystemen\nKognitive und praktische Kompetenzen: Es wird erwartet, dass Studierende vor Absolvierung des Moduls k\u00f6nnen:\n\u2022   Beherrschung einer praxisrelevanten Programmiersprache und -werkzeuge (z.B. Java oder C++)\n\u2022   Umgang mit einer Integrierten Entwicklungsumgebung, Build Management und\nQuellcodeverwaltung\nSoziale Kompetenzen und Selbstkompetenzen: Es wird erwartet, dass Studierende vor\nAbsolvierung des Moduls k\u00f6nnen:\n\u2022   Programmieraufgaben selbst\u00e4ndig l\u00f6sen\nDiese Vorkenntnisse werden in folgenden Modulen vermittelt: Einf\u00fchrung in die Programmierung, Modellierung, Software Engineering und Projektmanagement\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Inhalte (theoretische Konzepte und methodische Grundlagen) werden in Vortr\u00e4gen vorgestellt und in begleitenden \u00dcbungen von Studierenden erarbeitet. \u00dcbungsaufgaben sind\nvorwiegend praktische Beispiele aus den Bereichen Reviews und Testen am Computer,\ndie innerhalb vorgegebener Fristen individuell zu l\u00f6sen sind. Intensiver Einsatz von entsprechenden Werkzeugen z.B. Testautomatisierung zur Umsetzung der QS-Konzepte und\n-Methoden. In Workshops mit Gruppenarbeiten werden organisatorische Themen wie agile Organisation von Software-Teams erarbeitet. Die Beurteilung erfolgt auf Basis einer\nkontinuierlichen \u00dcberpr\u00fcfung der L\u00f6sungen dieser Aufgaben, durch aktive Teilnahme an\nden Workshops sowie durch Pr\u00fcfung(en) bzw. Test(s).",
                "lvas": [
                    {
                        "ects": "6,0",
                        "lva_typ": "VU",
                        "name": "Software-Qualit\u00e4tssicherung",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "4,0"
                    }
                ],
                "name": "Softwarequalit\u00e4tssicherung",
                "wahl": true
            }
        ],
        "name": "Software Entwicklung und Datenmodellierung"
    },
    {
        "module": [
            {
                "ects": "6,0",
                "lernergebnisse": "Die Studierenden verstehen den grundlegenden Aufbau und die Funktionsweise von Prozessoren und Computersystemen und k\u00f6nnen dies erkl\u00e4ren. Anhand\nvon praktischen Beispielen k\u00f6nnen sie dieses Wissen anwenden, ihren L\u00f6sungsansatz\npr\u00e4sentieren und begr\u00fcnden.\nFachliche und methodische Kompetenzen: Die Studierenden k\u00f6nnen unterschiedliche Zahlendarstellungen im Computer beschreiben, die Grundlagen der Booleschen Algebra und\nMinimierungsverfahren erl\u00e4utern, Basiswissen zu Informations- und Codierungstheorie\nwiedergeben, einfache Schaltnetze und Schaltwerke erkl\u00e4ren, und Aufbau und Funktionsweise von Prozessoren und Computersystemen darstellen.\nKognitive und praktische Kompetenzen: Die Studierenden k\u00f6nnen methodische Ans\u00e4tze\nauf konkrete Beispiele umsetzen. Sie k\u00f6nnen die Konzepte zu den pr\u00e4sentierten Inhalten\nverstehen, die zugeh\u00f6rigen Methoden und Konzepte vergleichen, evaluieren und gezielt\nanwenden. Sie k\u00f6nnen einfache digitale Systeme konstruieren und entwerfen.\nSoziale Kompetenzen und Selbstkompetenzen: Die Studierenden k\u00f6nnen Aufgaben mit\nSelbstorganisation und in Eigenverantwortlichkeit l\u00f6sen, daf\u00fcr Zeitmanagement anwenden und Deadlines einhalten.\nInhalt:\n\u2022   Darstellung von Zahlen in Computern und Grundrechnungsarten in diesen Darstellungen\n\u2022   Boole\u2019sche Algebra und Minimierungsverfahren\n\u2022   Informations- und Codierungstheorie\n\u2022   Gatterschaltungen (Addierer, Codierer, Multiplexer, ...)\n\u2022   Schaltnetze mit programmierbaren Bausteinen\n\u2022   Speicherglieder und Speicher\n\u2022   Synthese und Analyse von Schaltwerken\n\u2022   Aufbau und Funktionsweise von Prozessorelementen\nErwartete Vorkenntnisse:\nFachliche und methodische Kompetenzen: Es wird erwartet, dass Studierende vor Absolvierung des Moduls Mathematik auf AHS/BHS-Maturaniveau verstehen.\nKognitive und praktische Kompetenzen: Es wird erwartet, dass Studierende vor Absolvierung des Moduls diese Mathematik-Kenntnisse anwenden und geeignete Rechenwege\nausw\u00e4hlen, sowie fachliche Texte auf AHS/BHS-Maturaniveau verstehen k\u00f6nnen.\nSoziale Kompetenzen und Selbstkompetenzen: Es wird erwartet, dass Studierende vor\nAbsolvierung des Moduls grundlegendes Selbstmanagement anwenden k\u00f6nnen.\nKeine.\nVerpflichtende Voraussetzungen: Keine.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Vortr\u00e4ge und Repetitorien; Unterst\u00fctzung durch TUWEL, betreutes Forum; \u00dcbung in\nGro\u00df- und Kleingruppen zur Festigung des Lehrstoffes; Beurteilung der \u00dcbungsbeispiele;\nschriftliche Tests.",
                "lvas": [
                    {
                        "ects": "6,0",
                        "lva_typ": "VU",
                        "name": "Technische Grundlagen der Informatik",
                        "not_steop_constrained": true,
                        "semester": "1. Semester (WS)",
                        "sst": "4,0"
                    }
                ],
                "name": "Technische Grundlagen der Informatik",
                "wahl": false
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen:\n\u2022   Anforderungen und Designm\u00f6glichkeiten komplexer, verteilter Systeme verstehen\n\u2022   Grundlegende Methoden und Algorithmen verteilter Systeme verstehen, sowie deren Vor- und Nachteile und Einsatzm\u00f6glichkeiten kennen\n\u2022   Paradigmen und Konzepte aktueller Technologien und Werkzeuge f\u00fcr verteilte Systeme verstehen und anwenden k\u00f6nnen\n\u2022   Anwendungsgrenzen (v. a. asynchroner) verteilter Systeme kennen und verstehen\nKognitive und praktische Kompetenzen: Durch die Auseinandersetzung mit Methoden\nund Werkzeugen der Programmierung k\u00f6nnen die Studierenden\n\u2022   Methodiken zur Abstraktion anwenden,\n\u2022   methodisch fundiert an Probleme herangehen,\n\u2022   L\u00f6sungen kritisch bewerten und reflektieren und\n\u2022   Konzepte verteilter Systeme mit aktuellen Technologien in Form einfacher, verteilter Anwendungen umsetzen.\nSoziale Kompetenzen und Selbstkompetenzen: Folgende Kompetenzen werden besonders\ngef\u00f6rdert:\n\u2022   Selbstorganisation und Eigenverantwortlichkeit\n\u2022   Finden kreativer Probleml\u00f6sungen\n\u2022   Kritische Reflexion, Bewertung und Analyse technischer Alternativans\u00e4tze\nInhalt:\n\u2022   Verteilte Systeme \u2013 \u00dcbersicht, Grundlagen und Modelle\n\u2022   Prozesse und Kommunikation\n\u2022   Benennung\n\u2022   Fehlertoleranz in verteilten Systemen\n\u2022   Synchronisierung\n\u2022   Konsistenz und Replikation\n\u2022   Verteilte Dateisysteme\n\u2022   Sicherheit\n\u2022   Anwendungen und Technologietrends\nErwartete Vorkenntnisse:\nDieses Modul baut auf den Kenntnissen, Fertigkeiten und Kompetenzen folgender Module auf: Algorithmen und Datenstrukturen, Einf\u00fchrung in die Programmierung\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung:\nBlended Learning:\n\u2022   Den Studierenden wird empfohlen, vor der jeweiligen Vorlesung die auf der LVAHomepage angegebenen Kapitel des Lehrbuchs zu lesen.\n\u2022   Im Rahmen der Vorlesung wird die Theorie erl\u00e4utert und Querverbindungen hergestellt. Es besteht die M\u00f6glichkeit, komplexe Sachverhalte interaktiv (durch Fragen\nder Studierenden) zu erarbeiten.\n\u2022   Im Rahmen der parallel laufenden Labor\u00fcbungen werden ausgew\u00e4hlte Themen der\nLehrveranstaltung durch kleine Programmieraufgaben vertieft.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VO",
                        "name": "Verteilte Systeme",
                        "not_steop_constrained": false,
                        "semester": "5. Semester (WS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "UE",
                        "name": "Verteilte Systeme",
                        "not_steop_constrained": false,
                        "semester": "5. Semester (WS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Verteilte Systeme",
                "wahl": false
            },
            {
                "ects": "mindestens 6,0",
                "lernergebnisse": "Durch die Absolvierung des Moduls erhalten die Studierenden Grundkenntnisse der IT-Sicherheit. Die Studierenden lernen Aspekte der IT-Sicherheit in Projekten zu identifizieren und Ma\u00dfnahmen zu setzen, um diese zu ber\u00fccksichtigen.\nFachliche und methodische Kompetenzen: Das Modul vermittelt\n\u2022   die theoretische Grundlagen der IT-Sicherheit,\n\u2022   die theoretische Grundlagen der Kryptographie,\n\u2022   wichtige Sicherheitsaspekte in IT-Projekten, und\n\u2022   Wissen \u00fcber wichtige Best-Practice Sicherheitsma\u00dfnahmen.\nKognitive und praktische Kompetenzen:\n\u2022   Umsetzung von wichtigen Best-Practice Sicherheitsma\u00dfnahmen\n\u2022   Verstehen der Denkweise von AngreiferInnen\n\u2022   Entwicklung kryptographischer Verfahren und Sicherheitsbeweisen\nSoziale Kompetenzen und Selbstkompetenzen:\n\u2022   Aufmerksamkeit f\u00fcr Sicherheitsaspekte in IT-Projekten\n\u2022   Aufmerksamkeit f\u00fcr beweisbare Sicherheit\n\u2022   Kommunikation der Relevanz von IT-Sicherheit und von L\u00f6sungsideen f\u00fcr ITSicherheitsprobleme\nInhalt:\n\u2022   Operating systems\n\u2022   Access control\n\u2022   Network security\n\u2022   Application security\n\u2022   Database security\n\u2022   Web (application) security\n\u2022   Modern Cryptography\n\u2022   Security definitions\n\u2022   Security proofs\n\u2022   Privacy\n\u2022   Security and usability\n\u2022   Operations security\n\u2022   Physical security\n\u2022   Security architecture\n\u2022   Forensics\n\u2022   Exploiting vulnerabilities\n\u2022   Malware\n\u2022   System security\n\u2022   Standards, policies, best practices\n\u2022   Ethics, Compliance, Legal investigations\n\u2022   Risk management\n\u2022   Information security\n\u2022   Business continuity, disaster recovery\nErwartete Vorkenntnisse:\nDieses Modul baut auf den Kenntnissen und Fertigkeiten folgender Module auf: Einf\u00fchrung in die Programmierung, Technische Grundlagen der Informatik\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Introduction to Security",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Internet Security",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Introduction to Modern Cryptography",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Privacy Enhancing Technologies",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Security for Systems Engineering",
                        "not_steop_constrained": false,
                        "semester": null,
                        "sst": "2,0"
                    }
                ],
                "name": "Security",
                "wahl": true
            }
        ],
        "name": "Technische Informatik"
    },
    {
        "module": [
            {
                "ects": "9,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Nach Absolvierung dieses Moduls k\u00f6nnen Studierende:\n\u2022   tiefergehende Inhalte im Bereich Computergraphik, aufbauend auf das Modul \"Einf\u00fchrung in Visual Computing\", wiedergeben.\nKognitive und praktische Kompetenzen: Durch die Umsetzung einer umfangreichen graphischen Anwendung k\u00f6nnen Studierende nach Absolvierung des Moduls:\n\u2022   eine h\u00f6here Programmiersprache einsetzen\n\u2022   ein hardwarenahes Graphik-API (OpenGL oder DirectX) inklusive Shading Language (GLSL, HLSL) einsetzen\n\u2022   Computergraphik in praxisnahen Anwendungsgebieten einsetzen.\nSoziale Kompetenzen und Selbstkompetenzen: Das Modul f\u00f6rdert\n\u2022   die Arbeit in kleinen Teams,\n\u2022   die F\u00e4higkeit, eine interaktive Software vor vielen Leuten zu pr\u00e4sentieren und\n\u2022   die F\u00e4higkeit, eigenst\u00e4ndig Ziele zu definieren.\nAu\u00dferdem f\u00f6rdert das Modul die Kreativit\u00e4t und graphische Ausdrucksf\u00e4higkeit.\nInhalt: In einer Vorlesung werden fortgeschrittene Methoden der Computergraphik vertiefend behandelt:\n\u2022   H\u00f6here graphische Programmierung (z.B. Unity)\n\u2022   H\u00f6here Modellierungstechniken\n\u2022   Komplexe Datenstrukturen f\u00fcr graphische Daten\n\u2022   Abtasten und die Rekonstruktion kontinuierlicher Signale\n\u2022   Texturierung\n\u2022   Digital Fabrication\n\u2022   Illustrative Visualisierung\n\u2022   Computational Photography\nIn einer \u00dcbung wird eine gr\u00f6\u00dfere graphische Anwendung in kleinen Teams entwickelt,\nmit folgenden Schritten:\n\u2022   Konzeption und Entwurf (Storyboard)\n\u2022   Entwickeln einer 3D Engine mit vielf\u00e4ltigen graphischen Elementen und Effekten\n\u2022   Modellierung von Szenen und Animation\n\u2022   Pr\u00e4sentation\nErwartete Vorkenntnisse:\nFachliche und methodische Kompetenzen:\n\u2022   Mathematik: Vektor und Matrizenrechnung, aus Lineare Algebra\n\u2022   Algorithmen und Datenstrukturen, aus dem gleichnamigen Modul\n\u2022   Programmieren, objektorientiertes Programmieren\n\u2022   Computergraphik Kenntnisse, aus Modul Einf\u00fchrung in Visual Computing (beide\nTeile) sowie dessen Voraussetzungsmodule\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung:\n\u2022   3 ECTS Vorlesung (Frontalvortrag)\n\u2022   6 ECTS \u00dcbung (umfangreiches Projekt)",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VO",
                        "name": "Computergraphik",
                        "not_steop_constrained": false,
                        "semester": "4. Semester (SS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "6,0",
                        "lva_typ": "UE",
                        "name": "Computergraphik",
                        "not_steop_constrained": false,
                        "semester": "4. Semester (SS)",
                        "sst": "4,0"
                    }
                ],
                "name": "Computergraphik",
                "wahl": false
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Das Modul vermittelt grundlegende Kenntnisse im Bereich Mustererkennung und ein kritisches Verst\u00e4ndnis ihrer Theorien und\nGrunds\u00e4tze:\n\u2022   Design von Mustererkennungssystemen\n\u2022   k-Nearest Neighbor Klassifkatoren\n\u2022   Bayes Theorem\n\u2022   Lineare Diskriminanzfunktionen\n\u2022   Principal Component Analysis (PCA)\n\u2022   Percpetron und Neuronale Netze\n\u2022   Entscheidungsb\u00e4ume\n\u2022   Clustering\n\u2022   Markov Modelle\n\u2022   Evaluierung von Mustererkennungssystemen\nKognitive und praktische Kompetenzen: Durch die praktische Auseinandersetzung mit aktuellen Technologien, Methoden und Werkzeugen (wie modernen Programmiersprachen\nund Entwicklungsumgebungen) werden folgende kognitiven Fertigkeiten vermittelt:\n\u2022   Einsatz formaler Grundlagen und Methoden zur Modellbildung, L\u00f6sungsfindung\nund Evaluation,\n\u2022   Methodisch fundierte Herangehensweise an Probleme, insbesondere im Umgang\nmit offenen/unspezifizierten Problemsituationen,\n\u2022   Entwurfs- und Implementierungsstrategien.\nSoziale Kompetenzen und Selbstkompetenzen: Der Schwerpunkt liegt hier auf der besonderen F\u00f6rderung hoher Kreativit\u00e4ts- und Innovationspotentiale.\n\u2022   Eigeninitiative und Neugierde,\n\u2022   Selbstorganisation, Eigenverantwortlichkeit,\n\u2022   Problemformulierungs- und Probleml\u00f6sungskompetenz,\n\u2022   Kenntnisse der eigenen F\u00e4higkeiten und Grenzen, Kritikf\u00e4higkeit\n\u2022   Teamarbeit und Grundlagen der Projektmenagment\nInhalt: Dieses Modul enth\u00e4lt Inhalte, die auch f\u00fcr die anderen Bachelor-Studien angeboten werden.\n\u2022   Statistische Grundlagen: Bias, Varianz, diskrete und stetige Merkmale, multivariate Merkmale, bedingte Verteilungen, Randverteilungen, Kovarianzmatrix,\n\u2022   Merkmalsextraktion aus Bildern\n\u2022   Einfache Klassifikatoren: Nearest Neighbor (NN), k-NN und Perceptron,\n\u2022   Bayes Theorem, Bayes Klassifikator und Lineare Diskriminanzfunktionen\n\u2022   Einf\u00fchrung in Neuronale Netze\n\u2022   Maximum Margin Klassifikatoren (z.B. Support Vector Machine)\n\u2022   Clustering und Entscheidungsb\u00e4ume\n\u2022   Anwendungsbeispiele (z.B. Biometrie, Chromosom-Klassifikation, inhaltsbasierte\nBildsuche usw.)\nErwartete Vorkenntnisse:\nFachliche und methodische Kompetenzen: Um dieses Modul erfolgreich absolvieren zu\nk\u00f6nnen, sind folgende Kenntnisse notwendig:\n\u2022   Mathematik auf Maturaniveau sowie Vektorrechnung, Winkelfunktionen, Differenzieren und Integrieren, lineare Algebra, einfache Geometrie\n\u2022   Elementare Programmierkenntnisse f\u00fcr die \u00dcbung\n\u2022   Vorkenntnisse aus Statistik und Wahrscheinlichkeitstheorie sind von Vorteil.\nDie Vorkenntnisse werden in folgenden Modulen vermittelt: Algebra und Diskrete Mathematik, Analysis, Einf\u00fchrung in die Programmierung, Statistik und Wahrscheinlichkeitstheorie\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung:\n\u2022   Lehrveranstaltung wird als eine Frontalvorlesung mit Unterst\u00fctzung durch Medien\n(haupts\u00e4chlich Datenprojektor) abgehalten.\n\u2022   \u00dcbung wird in Einzelarbeit durchgef\u00fchrt.\n\u2022   F\u00fcr die L\u00f6sung der Aufgabenstellungen wird MATLAB eingesetzt.\n\u2022   Vorlesungsfolien und zus\u00e4tzliche Unterlagen werden zur Verf\u00fcgung gestellt.\n\u2022   Online e-Learning Plattform der TU Wien (TUWEL) wird verwendet, um Materialien zu verteilen und Administration der VO und UE zu koordinieren.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VO",
                        "name": "Einf\u00fchrung in die Mustererkennung",
                        "not_steop_constrained": false,
                        "semester": "5. Semester (WS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "UE",
                        "name": "Einf\u00fchrung in die Mustererkennung",
                        "not_steop_constrained": false,
                        "semester": "5. Semester (WS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Einf\u00fchrung in die Mustererkennung",
                "wahl": false
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Nach positiver Absolvierung des Moduls verstehen Studierende die grundlegende Techniken der wichtigsten Visual Computing Bereiche\nund haben ein kritisches Verst\u00e4ndnis ihrer Theorien und Grunds\u00e4tze erworben:\n\u2022   Computergraphik,\n\u2022   Computer Vision,\n\u2022   Digitale Bildverarbeitung,\n\u2022   Visualisierung,\n\u2022   Geometrische Modellierung.\nKognitive und praktische Kompetenzen: Durch die praktische Auseinandersetzung mit\naktuellen Technologien, Methoden und Werkzeugen (wie modernen Programmiersprachen und Entwicklungsumgebungen) k\u00f6nnen Studierende nach positivem Abschluss des\nModuls:\n\u2022   formale Grundlagen und Methoden zur Modellbildung, L\u00f6sungsfindung und Evaluation einsetzen,\n\u2022   an einschl\u00e4gige Probleme methodisch fundiert herangehen, insbesondere in offenen/unspezifizierten Problemsituationen,\n\u2022   Standard-Entwurfs- und Implementierungsstrategien anwenden.\nSoziale Kompetenzen und Selbstkompetenzen: Ein Schwerpunkt liegt in der besonderen\nF\u00f6rderung hoher Kreativit\u00e4ts- und Innovationspotentiale. Studierende werden geschult\nin\n\u2022   Eigeninitiative und Neugierde,\n\u2022   Selbstorganisation, Eigenverantwortlichkeit,\n\u2022   Problemformulierungs- und Probleml\u00f6sungskompetenz,\n\u2022   Kenntnisse der eigenen F\u00e4higkeiten und Grenzen, Kritikf\u00e4higkeit.\nInhalt:\n\u2022   Digitale Bilder: Aufl\u00f6sung, Abtastung, Quantisierung, Farbrepr\u00e4sentation\n\u2022   Bildoperationen: Punktoperationen, lokale und globale Operationen\n\u2022   Segmentierung\n\u2022   Bewegungserkennung\n\u2022   Repr\u00e4sentation: konturbasiert, regionenbasiert (Momente, Graphen)\n\u2022   Kodierung: Entropie-Kodierung, Source-Kodierung\n\u2022   Komprimierung: Prediktive Kodierung, Vektorquantisierung, JPEG, MPEG\n\u2022   Hardware: Ein- und Ausgabeger\u00e4te, Bildgebende Verfahren, Sensoren\n\u2022   Radiometrische und Geometrische Transformationen\n\u2022   Graphikprimitive und deren Attribute\n\u2022   2D- und 3D-Viewing, Graphikarchitektur (Rendering Pipeline, etc)\n\u2022   Sichtbarkeitsverfahren\n\u2022   3D Objektrepr\u00e4sentationen\n\u2022   Kurven und Fl\u00e4chen\n\u2022   Licht und Schattierung\n\u2022   Ray-Tracing und Globale Beleuchtung\n\u2022   Texturen und andere Mappings\n\u2022   Farben und Farbmodelle\n\u2022   Computational Photography\n\u2022   Geometrische Modellierung\nErwartete Vorkenntnisse:\n\u2022   Mathematik auf Maturaniveau (Vektorrechnung, Winkelfunktionen, Differenzieren\nund Integrieren, lineare Algebra, einfache Geometrie)\n\u2022   Elementare Programmierkenntnisse\nDiese Voraussetzungen werden in folgenden Modulen vermittelt: Algebra und Diskrete\nMathematik, Einf\u00fchrung in die Programmierung\nVerpflichtende Voraussetzungen: Keine.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Vorlesung mit \u00dcbung: Angesichts der gro\u00dfen Anzahl von H\u00f6rerInnen ist das eine Vorlesung\nmit Unterst\u00fctzung durch Medien (haupts\u00e4chlich Datenprojektor), in die \u00dcbungsbeispiele\neingebaut sind. Es gibt ein kompaktes Skriptum, au\u00dferdem werden Kopien der Vorlesungsfolien zur Verf\u00fcgung gestellt. Die Leistungsbeurteilung erfolgt durch die erfolgreiche\nAbgabe von \u00dcbungsbeispielen und die erfolgreiche Teilnahme an zwei Tests.",
                "lvas": [
                    {
                        "ects": "6,0",
                        "lva_typ": "VU",
                        "name": "Einf\u00fchrung in Visual Computing",
                        "not_steop_constrained": true,
                        "semester": "2. Semester (SS)",
                        "sst": "5,0"
                    }
                ],
                "name": "Einf\u00fchrung in Visual Computing",
                "wahl": false
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Nach Absolvierung dieses Moduls k\u00f6nnen Studierende:\n\u2022   Grundlegende Algorithmen der Computergraphik verstehen und implementieren,\n\u2022   Grundlegende Algorithmen der Computer Vision verstehen und anwenden,\n\u2022   Grundlegende Algorithmen der Digitalen Bildverarbeitung verstehen und implementieren,\nKognitive und praktische Kompetenzen: Durch die praktische Auseinandersetzung mit aktuellen Technologien, Methoden und Werkzeugen (wie modernen Programmiersprachen\nund Entwicklungsumgebungen) k\u00f6nnen Studierende nach Absolvierung des Moduls:\n\u2022   Formale Grundlagen und Methoden zur Modellbildung einsetzen,\n\u2022   L\u00f6sungen zu Visual Computing Problemen finden und evaluieren,\n\u2022   Grundlegende Algorithmen der Computergraphik implementieren,\n\u2022   Grundlegende Algorithmen der Computer Vision anwenden,\n\u2022   Grundlegende Algorithmen der Digitalen Bildverarbeitung implementieren,\nSoziale Kompetenzen und Selbstkompetenzen: Das Modul f\u00f6rdert die Erh\u00f6hung der Kreativit\u00e4ts- und Innovationspotentiale, insbesondere\n\u2022   Die Eigeninitiative und Neugierde,\n\u2022   Die Selbstorganisation, Eigenverantwortlichkeit,\n\u2022   Die Problemformulierungs- und Probleml\u00f6sungskompetenz,\n\u2022   Kenntnisse der eigenen F\u00e4higkeiten und Grenzen, Kritikf\u00e4higkeit.\nInhalt:\n\u2022   Digitale Bilder: Aufl\u00f6sung, Abtastung, Quantisierung, Farbrepr\u00e4sentation\n\u2022   Bildoperationen: Punktoperationen, lokale und globale Operationen\n\u2022   Segmentierung\n\u2022   Bewegungserkennung\n\u2022   Repr\u00e4sentation: konturbasiert, regionenbasiert (Momente, Graphen)\n\u2022   Kodierung: Entropie-Kodierung, Source-Kodierung\n\u2022   Komprimierung: Prediktive Kodierung, Vektorquantisierung, JPEG, MPEG\n\u2022   Hardware: Ein- und Ausgabeger\u00e4te, Bildgebende Verfahren, Sensoren\n\u2022   Radiometrische und Geometrische Transformationen\n\u2022   Graphikprimitive und deren Attribute\n\u2022   2D- und 3D-Viewing, Graphikarchitektur (Rendering Pipeline, etc)\n\u2022   Sichtbarkeitsverfahren\n\u2022   3D Objektrepr\u00e4sentationen\n\u2022   Kurven und Fl\u00e4chen\n\u2022   Licht und Schattierung\n\u2022   Ray-Tracing und Globale Beleuchtung\n\u2022   Texturen und andere Mappings\n\u2022   Farben und Farbmodelle\n\u2022   Computational Photography\n\u2022   Non-photorealistic Rendering\nErwartete Vorkenntnisse:\nFachliche und methodische Kompetenzen: Um dieses Modul erfolgreich absolvieren zu\nk\u00f6nnen, sind die Kenntnisse aus dem Modul Einf\u00fchrung in Visual Computing erforderlich.\nKognitive und praktische Kompetenzen: Es werden fortgeschrittene Programmierkenntnisse erwartet.\nSoziale Kompetenzen und Selbstkompetenzen: Es werden die sozialen Kompetenzen, Innovationskompetenz und Kreativit\u00e4t eines interessierten Maturanten erwartet.\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung:\n\u00dcbungen: Die Studierenden m\u00fcssen alleine oder in kleinen Gruppen facheinschl\u00e4gige\nProgrammieraufgaben l\u00f6sen, die zum Teil Implementierungen von Inhalten aus dem\nModul Einf\u00fchrung in Visual Computing sind, zum Teil darauf aufbauende Anwendungsbeispiele. Die Beurteilung erfolgt in pers\u00f6nlichen Abgabegespr\u00e4chen und auf der Basis\nvon abgegebenen Programmcodes.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "UE",
                        "name": "Einf\u00fchrung in die Computergraphik",
                        "not_steop_constrained": false,
                        "semester": "3. Semester (WS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "UE",
                        "name": "Einf\u00fchrung in die digitale Bildverarbeitung",
                        "not_steop_constrained": false,
                        "semester": "3. Semester (WS)",
                        "sst": "2,0"
                    }
                ],
                "name": "\u00dcbungen zu Visual Computing",
                "wahl": false
            },
            {
                "ects": "6,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen die Studierenden\n\u2022   die wissenschaftlichen Grundlagen, Methoden, Konzepte und Techniken der Visualisierung verstehen und erkl\u00e4ren. Ihr Wissen und Verstehen entspricht dem Stand\nder Fachliteratur im Bereich der Visiualisierung.\nKognitive und praktische Kompetenzen: Nach positiver Absolvierung des Moduls k\u00f6nnen\ndie Studierenden\n\u2022   ihr Wissen und Verstehen praktisch in Visualisierungsaufgaben anwenden\n\u2022   Probleml\u00f6sungen und Argumente f\u00fcr Visualisierungsaufgaben erarbeiten und weiterentwickeln.\n\u2022   f\u00fcr die Visualisierung relevante Informationen sammeln, bewerten und interpretieren\nSoziale Kompetenzen und Selbstkompetenzen: Nach positiver Absolvierung des Moduls\nk\u00f6nnen die Studierenden\n\u2022   ihr Wissen selbst\u00e4ndig vertiefen.\n\u2022   visualisierungsbezogene Positionen und Probleml\u00f6sungen formulieren.\n\u2022   sich mit InformatikerInnen und Dom\u00e4nenexpertInnen dar\u00fcber austauschen.\n\u2022   Verantwortung in einem Team \u00fcbernehmen.\n\u2022   eigene und fremde Arbeit systematisch kritisieren.\n\u2022   Selbstorganisation und Eigenverantwortlichkeit zum eigenst\u00e4ndigen L\u00f6sen von Aufgaben.\nInhalt:\n\u2022   Grundlagen der Visualisierung: Allgemeine Einf\u00fchrung mit Begriffsabkl\u00e4rung und\nhistorischem Hintergrund\n\u2022   Ziele der Visualierung, Taxonomien, Modelle und Informationsdesign\n\u2022   Informationsdesign: visuelle Gestaltung und Aufbereitung von Daten, Informationen und Wissen (Spannungsfeld zwischen Visualisierung, Graphikdesign und Kognition und Wahrnehmung/Gestaltgesetze der Wahrnehmung)\n\u2022   Wissenschaftliche Visualisierung, Informationsvisualisierung, Visuelle Analyse (Visual Analytics)\n\u2022   R\u00e4umliche und zeitliche Daten in der Visualisierung\n\u2022   Visualisierung sehr grosser, heterogener Datenmengen\n\u2022   Visuelle Analyse und Erkenntnisgewinnung aus Datenbest\u00e4nden, visuelle Datenbehandlung, -verarbeitung und -analyse\n\u2022   Interaktionstechniken\n\u2022   Evaluierungsmethoden\n\u2022   Visualisierungsanwendungen: Gesundheitswesen und Biotechnologie, Wirtschaft,\nSicherheit und Risikomanagement (Kriminalit\u00e4tsbek\u00e4mpfung), Umwelt- und Klimaforschung, Automobilindustrie, usw.\nErwartete Vorkenntnisse:\nFachliche und methodische Kompetenzen: Um dieses Modul erfolgreich absolvieren zu\nk\u00f6nnen, sind folgende Kenntnisse notwendig:\n\u2022   Programmieren\n\u2022   Algorithmen und Datenstrukturen\n\u2022   Einf\u00fchrung in Visual Computing\n\u2022   Computergraphik\nEs werden die Kenntnisse aus folgenden Modulen erwartet: Algorithmen und Datenstrukturen, Computergraphik, Einf\u00fchrung in die Programmierung, Einf\u00fchrung in Visual\nComputing\nVerpflichtende Voraussetzungen: Studieneingangs- und Orientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Die\nLehrveranstaltungen bestehen aus einem Vorlesungsteil und einem \u00dcbungsteil. Die beschriebenen Inhalte und Konzepte werden im Rahmen der Vorlesungseinheit erl\u00e4utert\nund im \u00dcbungsteil praktisch erprobt und angewendet.",
                "lvas": [
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Informationsdesign und Visualisierung",
                        "not_steop_constrained": false,
                        "semester": "4. Semester (SS)",
                        "sst": "2,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "VU",
                        "name": "Visualisierung 1",
                        "not_steop_constrained": false,
                        "semester": "5. Semester (WS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Visualisierung",
                "wahl": false
            }
        ],
        "name": "Visual Computing"
    },
    {
        "module": [
            {
                "ects": "18,0",
                "lernergebnisse": "Die Lehrveranstaltungen dieses Moduls dienen der Vertiefung des Faches sowie der Aneignung au\u00dferfachlicher Kenntnisse, F\u00e4higkeiten und Kompetenzen.\nInhalt: Abh\u00e4ngig von den gew\u00e4hlten Lehrveranstaltungen.\nErwartete Vorkenntnisse: Abh\u00e4ngig von den gew\u00e4hlten Lehrveranstaltungen.\nVerpflichtende Voraussetzungen: Abh\u00e4ngig von den gew\u00e4hlten Lehrveranstaltungen.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Abh\u00e4ngig von den gew\u00e4hlten Lehrveranstaltungen.",
                "lvas": [],
                "name": "Freie Wahlf\u00e4cher und Transferable Skills",
                "wahl": false
            }
        ],
        "name": "Freie Wahlf\u00e4cher und Transferable Skills"
    },
    {
        "module": [
            {
                "ects": "13,0",
                "lernergebnisse": "Fachliche und methodische Kompetenzen:\n\u2022   Wissenschaftliche Methodik\n\u2022   Internationaler Wissenschaftsbetrieb\nKognitive und praktische Kompetenzen:\n\u2022   Systematische Recherche\n\u2022   Pr\u00e4sentationstechniken\n\u2022   Strukturierte und konzise Kommunikation von Inhalten in m\u00fcndlicher und schriftlicher Form\n\u2022   F\u00e4higkeit zur Anwendung der im Studium erworbenen Kenntnisse und Fertigkeiten\nim Kontext einer gr\u00f6\u00dferen Problemstellung\nSoziale Kompetenzen und Selbstkompetenzen:\n\u2022   Selbstorganisation\n\u2022   Eigenverantwortlichkeit und Eigeninitiative\n\u2022   Teamf\u00e4higkeit\n\u2022   Finden kreativer Probleml\u00f6sungen\n\u2022   Reflexion der eigenen Arbeit im technischen und gesellschaftlichen Kontext\nInhalt: Im Rahmen des Seminars Wissenschaftliches Arbeiten lernen die Studierenden\nwissenschaftliche Methoden und den Wissenschaftsbetrieb kennen. An Hand eines vorgegebenen Themas \u00fcben sie Recherche sowie schriftliche und m\u00fcndliche Pr\u00e4sentation.\nDarauf aufbauend wenden sie im Projekt Bachelorarbeit f\u00fcr Informatik und Wirtschaftsinformatik die im Studium erworbenen Kenntnisse und Fertigkeiten auf ein Thema an,\ndas dem Qualifikationsprofil des Studiums entspricht. Die erzielten Ergebnisse werden neben der Aufgabenstellung, den angewandten Methoden und dem Umfeld in einer schriftlichen Abschlussarbeit dargestellt.\nErwartete Vorkenntnisse: Die Arbeit an der Bachelorarbeit erfordert die Kenntnisse,\nFertigkeiten und Kompetenzen zumindest der Pflichtmodule des Bachelorstudiums.\nVerpflichtende Voraussetzungen: Positive Absolvierung der Studieneingangs- und\nOrientierungsphase.\nAngewendete Lehr- und Lernformen und geeignete Leistungsbeurteilung: Im\nSeminar besteht bei den Vortr\u00e4gen zu Wissenschaftsmethodik und -betrieb sowie bei der\nPr\u00e4sentation der Rechercheergebnisse Anwesenheitspflicht, ebenso bei der Pr\u00e4sentation\nder Bachelorarbeiten. Davon abgesehen k\u00f6nnen das Seminar- und das Bachelorarbeitsthema in Absprache mit den Lehrenden zeitlich und \u00f6rtlich weitgehend ungebunden\nbearbeitet werden. Die Beurteilung orientiert sich an der Qualit\u00e4t und Originalit\u00e4t der\nm\u00fcndlichen und schriftlichen Darstellung der Themen sowie der daf\u00fcr notwendigen Vorarbeiten und ber\u00fccksichtigt auch das Engagement bei der Diskussion der Arbeiten anderer Studierender.",
                "lvas": [
                    {
                        "ects": "10,0",
                        "lva_typ": "PR",
                        "name": "Bachelorarbeit f\u00fcr Informatik und Wirtschaftsinformatik",
                        "not_steop_constrained": false,
                        "semester": "6. Semester (SS)",
                        "sst": "5,0"
                    },
                    {
                        "ects": "3,0",
                        "lva_typ": "SE",
                        "name": "Wissenschaftliches Arbeiten",
                        "not_steop_constrained": false,
                        "semester": "5. Semester (WS)",
                        "sst": "2,0"
                    }
                ],
                "name": "Bachelorarbeit",
                "wahl": false
            }
        ],
        "name": "Bachelorarbeit"
    }
]